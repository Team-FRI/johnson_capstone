#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Brunnerdale_Land_Temp$DateTime <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Do same thing for stream temp
Brunnerdale_Stream_Temp$DateTime <- as.POSIXct(Brunnerdale_Stream_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Now that its in the proper format, have to extract month as an individual column.
#First do land temp
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Land_Temp_Updated)
#Now do stream temp
Brunnerdale_Stream_Temp_Updated <- Brunnerdale_Stream_Temp %>%
mutate(Month=month(Brunnerdale_Stream_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Stream_Temp_Updated)
install.packages("readxl")
install.packages("dplyr")
install.packages("lubridate")
install.packages("dplyr")
install.packages("lubridate")
#Bellow seemed to work to get year as a column
#Now have to extract year as a new column
Brunnerdale_Land_Temp_YM <- Brunnerdale_Land_Temp_Updated %>%
mutate(Year=year(Brunnerdale_Land_Temp_Updated$DateTime))
summary(Brunnerdale_Land_Temp_Updated_YM)
summary(Brunnerdale_Land_Temp_YM)
View(Brunnerdale_Land_Temp_YM)
Brunnerdale_Stream_Temp_YM <- Brunnerdale_Stream_Temp_Updated %>%
mutate(Year=year(Brunnerdale_Stream_Temp_Updated$DateTime))
summary(Brunnerdale_Stream_Temp_YM)
View(Brunnerdale_Stream_Temp_YM)
View(Bind_ogdonia_masterland1)
Brunnerdale_LT_Master <- Brunnerdale_Land_Temp_YM %>%
unite(YearMonth, Year, Month, "-")
install.packages("tidyr")
library("tidyr")
Brunnerdale_LT_Master <- Brunnerdale_Land_Temp_YM %>%
unite(YearMonth, Year, Month, "-")
Brunnerdale_LT_Master <- Brunnerdale_Land_Temp_YM %>%
unite(YearMonth, Year, Month)
View(Brunnerdale_LT_Master)
Brunnerdale_ST_Master <- Brunnerdale_Stream_Temp_YM %>%
unite(YearMonth, Year, Month)
View(Brunnerdale_ST_Master)
Brunnerdale_ST_Master <- Brunnerdale_Stream_Temp_YM %>%
unite(YearMonth, Year, "-", Month)
View(Brunnerdale.ogdonia_FishRecords2)
=======
class(Brunnerdale_Land_Temp$DateTime)
as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp$DateTime)
BrunnerdaleLandTemp_Corrected <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp$DateTime)
IXct(Brunnerdale_Land_Temp$DateTime)
BrunnerdaleLandTemp_Corrected <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(BrunnerdaleLandTemp_Corrected)
Brunnerdale_Land_Temp$DateTime <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp)
class(Brunnerdale_Land_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
View(Brunnerdale.ogdonia_FishRecords2)
View(Brunnerdale_Land_Temp)
View(Brunnerdale_Land_Temp)
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
library("dplyr")
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(month(Brunnerdale_Land_Temp$DateTime))
summary(Brunnerdale_Land_Temp_Updated)
View(Brunnerdale_Land_Temp_Updated)
View(Brunnerdale_Land_Temp_Updated)
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime))
summary(Brunnerdale_Land_Temp_Updated)
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Land_Temp_Updated)
>>>>>>> Stashed changes
Set working directory
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#All 3 excell files I'm going to read in are CSV's.
Painter_LT <- read.csv("Painter_Land_X_QC.csv")
Painter_ST00 <- read.csv("Painter_Stream_X_QC.csv")
Painter_ST01 <- read.csv("Painter_Stream0_X_QC.csv")
#The problem is the stream temperature data is split up into two data sets, and I want them as 1 data set.
#So lets merge the two.
Painter_ST <- merge(Painter_ST00, Painter_ST01, all = TRUE)
#This works, but the dates are not in order??????????
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Painter_LT$DateTime)
class(Painter_ST$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Painter_LT$DateTime <- as.POSIXct(Painter_LT$DateTime)
class(Painter_LT$DateTime)
summary(Painter_LT)
#Do same thing for stream temp
Painter_ST$DateTime <- as.POSIXct(Painter_ST$DateTime)
class(Painter_ST$DateTime)
summary(Painter_ST)
#Now that its in the proper format, have to extract month as an individual column.
#In order to do this we need to use the muate function, which is in the dplyr package.
install.packages("dplyr")
library(dplyr)
#First do land temp
Painter_LT_Updated <- Painter_LT %>%
mutate(Month=month(Painter_LT$DateTime, label = TRUE))
summary(Painter_LT_Updated)
#Now do stream temp
Painter_ST_Updated <- Painter_ST %>%
mutate(Month=month(Painter_ST$DateTime, label = TRUE))
summary(Painter_ST_Updated)
#Bellow seemed to work to get year as a column
#Now have to extract year as a new column
Painter_LT_YM <- Painter_LT_Updated %>%
mutate(Year=year(Painter_LT_Updated$DateTime))
summary(Painter_LT_YM)
Painter_ST_YM <- Painter_ST_Updated %>%
mutate(Year=year(Painter_ST_Updated$DateTime))
summary(Painter_ST_YM)
#Need to combine Year and Month columns to be one column formatted as [YYYY-MM].
#Will need ot use the unite function. To do that, install tidyr package.
install.packages("tidyr")
library(tidyr)
#Now try uniting Year and Month Columns.
#For Land temp:
Painter_LT_Master <- Painter_LT_YM %>%
unite(YearMonth, Year, Month)
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month)
Brunnerdale_ST_Master <- Brunnerdale_Stream_Temp_YM %>%
unite(YearMonth, Year, Month)
#So it works, however if I leave the "-" in their as it is in line 114-115 in the data testing_1.R docuument, it gives me an error message saying
#"Error in unite()'
#Can't subset columns that don't exist.
#Column '-' doesn't exist."
#It gives an _ in between the year and month column instead of -.
Painter_ST <- arrange(Painter_ST, DateTime)
View(Painter_ST)
Brunnerdale_ST_Master <- Brunnerdale_Stream_Temp_YM %>%
unite(YearMonth, Year, Month)
View(Painter_LT_Master)
View(Painter_ST_Master)
Painter_LT_Master <- Painter_LT_YM %>%
unite(YearMonth, Year, Month, sep = "-")
View(Painter_LT_Master)
View(Painter_LT_Master)
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month, sep = "-")
View(Painter_ST_Master)
View(Painter_ST_Master)
Painter_ST_Master %>%
group_by(YearMonth) %>%
View(Painter_ST_Master)
View(Painter_ST_Master)
View(Painter_ST_Master)
Painter_Stream_Summary <- Painter_ST_Master %>%
group_by(YearMonth) %>%
Painter_Stream_Summary <- Painter_ST_Master %>%
group_by(YearMonth) %>%
summarise(AvgYearMonthTemp = mean(Temp_C)
Painter_Stream_Summary <- Painter_ST_Master %>%
Painter_Stream_Summary <- Painter_ST_Master %>%
select(YearMonth, Temp_C) %>%
group_by(YearMonth) %>%
summarise(AvgYearMonthTemp = mean(Temp_C))
Painter_Stream_Summary
View(Painter_Stream_Summary)
Painter_Stream_Summary <- Painter_ST_Master %>%
select(YearMonth, Temp_C) %>%
group_by(YearMonth) %>%
arrange(YearMonth) %>%
summarise(AvgYearMonthTemp = mean(Temp_C))
Painter_Stream_Summary
Painter_LT_Updated <- Painter_LT %>%
mutate(Month=month(Painter_LT$DateTime, label = FALSE))
View(Painter_LT_Updated)
#Now do stream temp
Painter_ST_Updated <- Painter_ST %>%
mutate(Month=month(Painter_ST$DateTime, label = FALSE))
Painter_LT_Master <- Painter_LT_YM %>%
unite(YearMonth, Year, Month, sep = "-")
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month, sep = "-")
Painter_Stream_Summary <- Painter_ST_Master %>%
select(YearMonth, Temp_C) %>%
group_by(YearMonth) %>%
arrange(YearMonth) %>%
summarise(AvgYearMonthTemp = mean(Temp_C))
Painter_Stream_Summary
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#All 3 excell files I'm going to read in are CSV's.
Painter_LT <- read.csv("Painter_Land_X_QC.csv")
Painter_ST00 <- read.csv("Painter_Stream_X_QC.csv")
Painter_ST01 <- read.csv("Painter_Stream0_X_QC.csv")
#The problem is the stream temperature data is split up into two data sets, and I want them as 1 data set.
#So lets merge the two.
Painter_ST <- merge(Painter_ST00, Painter_ST01, all = TRUE)
#To arrange dates in right order:
Painter_ST <- arrange(Painter_ST, DateTime)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Painter_LT$DateTime)
class(Painter_ST$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Painter_LT$DateTime <- as.POSIXct(Painter_LT$DateTime)
class(Painter_LT$DateTime)
summary(Painter_LT)
#Do same thing for stream temp
Painter_ST$DateTime <- as.POSIXct(Painter_ST$DateTime)
class(Painter_ST$DateTime)
summary(Painter_ST)
#Now that its in the proper format, have to extract month as an individual column.
#In order to do this we need to use the muate function, which is in the dplyr package.
install.packages("dplyr")
library(dplyr)
#First do land temp
Painter_LT_Updated <- Painter_LT %>%
mutate(Month=month(Painter_LT$DateTime, label = FALSE))
summary(Painter_LT_Updated)
#Now do stream temp
Painter_ST_Updated <- Painter_ST %>%
mutate(Month=month(Painter_ST$DateTime, label = FALSE))
summary(Painter_ST_Updated)
#Bellow seemed to work to get year as a column
#Now have to extract year as a new column
Painter_LT_YM <- Painter_LT_Updated %>%
mutate(Year=year(Painter_LT_Updated$DateTime))
summary(Painter_LT_YM)
Painter_ST_YM <- Painter_ST_Updated %>%
mutate(Year=year(Painter_ST_Updated$DateTime))
summary(Painter_ST_YM)
#Need to combine Year and Month columns to be one column formatted as [YYYY-MM].
#Will need ot use the unite function. To do that, install tidyr package.
install.packages("tidyr")
library(tidyr)
#Now try uniting Year and Month Columns.
#For Land temp:
Painter_LT_Master <- Painter_LT_YM %>%
unite(YearMonth, Year, Month, sep = "-")
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month, sep = "-")
#So it works, however if I leave the "-" in their as it is in line 114-115 in the data testing_1.R docuument, it gives me an error message saying
#"Error in unite()'
#Can't subset columns that don't exist.
#Column '-' doesn't exist."
#It gives an _ in between the year and month column instead of -.
Painter_Stream_Summary <- Painter_ST_Master %>%
select(YearMonth, Temp_C) %>%
group_by(YearMonth) %>%
arrange(YearMonth) %>%
summarise(AvgYearMonthTemp = mean(Temp_C))
Painter_Stream_Summary
install.packages("tidyr")
install.packages("dplyr")
install.packages("lubridate")
install.packages("utf8")
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#All 3 excell files I'm going to read in are CSV's.
Painter_LT <- read.csv("Painter_Land_X_QC.csv")
Painter_ST00 <- read.csv("Painter_Stream_X_QC.csv")
Painter_ST01 <- read.csv("Painter_Stream0_X_QC.csv")
#The problem is the stream temperature data is split up into two data sets, and I want them as 1 data set.
#So lets merge the two.
Painter_ST <- merge(Painter_ST00, Painter_ST01, all = TRUE)
#To arrange dates in right order:
Painter_ST <- arrange(Painter_ST, DateTime)
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#All 3 excell files I'm going to read in are CSV's.
Painter_LT <- read.csv("Painter_Land_X_QC.csv")
Painter_ST00 <- read.csv("Painter_Stream_X_QC.csv")
Painter_ST01 <- read.csv("Painter_Stream0_X_QC.csv")
#The problem is the stream temperature data is split up into two data sets, and I want them as 1 data set.
#So lets merge the two.
Painter_ST <- merge(Painter_ST00, Painter_ST01, all = TRUE)
install.packages("dplyr")
library(dplyr)
#To arrange dates in right order:
Painter_ST <- arrange(Painter_ST, DateTime)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Painter_LT$DateTime)
class(Painter_ST$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Painter_LT$DateTime <- as.POSIXct(Painter_LT$DateTime)
class(Painter_LT$DateTime)
summary(Painter_LT)
#Do same thing for stream temp
Painter_ST$DateTime <- as.POSIXct(Painter_ST$DateTime)
class(Painter_ST$DateTime)
summary(Painter_ST)
#Now that its in the proper format, have to extract month as an individual column.
#In order to do this we need to use the muate function, which is in the dplyr package, which is already installed...
#First do land temp
Painter_LT_Updated <- Painter_LT %>%
mutate(Month=month(Painter_LT$DateTime, label = FALSE))
summary(Painter_LT_Updated)
#Now do stream temp
Painter_ST_Updated <- Painter_ST %>%
mutate(Month=month(Painter_ST$DateTime, label = FALSE))
summary(Painter_ST_Updated)
#Bellow seemed to work to get year as a column
#Now have to extract year as a new column
Painter_LT_YM <- Painter_LT_Updated %>%
mutate(Year=year(Painter_LT_Updated$DateTime))
summary(Painter_LT_YM)
Painter_ST_YM <- Painter_ST_Updated %>%
mutate(Year=year(Painter_ST_Updated$DateTime))
summary(Painter_ST_YM)
#Need to combine Year and Month columns to be one column formatted as [YYYY-MM].
#Will need ot use the unite function. To do that, install tidyr package.
install.packages("tidyr")
library(tidyr)
#Now try uniting Year and Month Columns.
#For Land temp:
Painter_LT_Master <- Painter_LT_YM %>%
unite(YearMonth, Year, Month, sep = "-")
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month, sep = "-")
#So it works, however if I leave the "-" in their as it is in line 114-115 in the data testing_1.R docuument, it gives me an error message saying
#"Error in unite()'
#Can't subset columns that don't exist.
#Column '-' doesn't exist."
#It gives an _ in between the year and month column instead of -.
Painter_Stream_Summary <- Painter_ST_Master %>%
select(YearMonth, Temp_C) %>%
group_by(YearMonth) %>%
arrange(YearMonth) %>%
summarise(AvgYearMonthTemp = mean(Temp_C))
Painter_Stream_Summary
View(Painter_Stream_Summary)
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month, sep = "-") %>%
as.yearmon("%Y-%m")
Painter_ST_Master <- as.yearmon("%Y-%m")
Painter_ST_Master <- as.yearmon(Painter_ST_Master, "%Y-%m")
install.packages("zoo")
library("zoo")
Painter_ST_Master <- as.yearmon(Painter_ST_Master, "%Y-%m")
Painter_ST_Master <- as.yearmon(Painter_ST_Master$YearMonth, "%Y-%m")
View(Painter_LT_Master)
Painter_LT_Master <- Painter_LT_YM %>%
unite(YearMonth, Year, Month, sep = "-")
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month, sep = "-")
Painter_ST_Master <- as.yearmon(Painter_ST_Master$YearMonth, "%Y-%m")
Painter_ST_Master$YearMonth <- as.yearmon(Painter_ST_Master$YearMonth, "%Y-%m")
Painter_LT_Master <- Painter_LT_YM %>%
unite(YearMonth, Year, Month, sep = "-")
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month, sep = "-")
View(Painter_ST_Master)
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#All 3 excell files I'm going to read in are CSV's.
Painter_LT <- read.csv("Painter_Land_X_QC.csv")
Painter_ST00 <- read.csv("Painter_Stream_X_QC.csv")
Painter_ST01 <- read.csv("Painter_Stream0_X_QC.csv")
#The problem is the stream temperature data is split up into two data sets, and I want them as 1 data set.
#So lets merge the two.
Painter_ST <- merge(Painter_ST00, Painter_ST01, all = TRUE)
#To arrange dates in right order, install dplyr package.
install.packages("dplyr")
library(dplyr)
#Now to arrange dates in right order:
Painter_ST <- arrange(Painter_ST, DateTime)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Painter_LT$DateTime)
class(Painter_ST$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Painter_LT$DateTime <- as.POSIXct(Painter_LT$DateTime)
class(Painter_LT$DateTime)
summary(Painter_LT)
#Do same thing for stream temp
Painter_ST$DateTime <- as.POSIXct(Painter_ST$DateTime)
class(Painter_ST$DateTime)
summary(Painter_ST)
#Now that its in the proper format, have to extract month as an individual column.
#In order to do this we need to use the muate function, which is in the dplyr package, which is already installed...
#First do land temp
Painter_LT_Updated <- Painter_LT %>%
mutate(Month=month(Painter_LT$DateTime, label = FALSE))
summary(Painter_LT_Updated)
#Now do stream temp
Painter_ST_Updated <- Painter_ST %>%
mutate(Month=month(Painter_ST$DateTime, label = FALSE))
summary(Painter_ST_Updated)
#Bellow seemed to work to get year as a column
#Now have to extract year as a new column
Painter_LT_YM <- Painter_LT_Updated %>%
mutate(Year=year(Painter_LT_Updated$DateTime))
summary(Painter_LT_YM)
Painter_ST_YM <- Painter_ST_Updated %>%
mutate(Year=year(Painter_ST_Updated$DateTime))
summary(Painter_ST_YM)
#Need to combine Year and Month columns to be one column formatted as [YYYY-MM].
#Will need ot use the unite function. To do that, install tidyr package.
install.packages("tidyr")
library(tidyr)
#Now try uniting Year and Month Columns.
#For Land temp:
Painter_LT_Master <- Painter_LT_YM %>%
unite(YearMonth, Year, Month, sep = "-")
#For Stream temp:
Painter_ST_Master <- Painter_ST_YM %>%
unite(YearMonth, Year, Month, sep = "-")
install.packages("zoo")
library("zoo")
View(Painter_ST_Master)
summary(Painter_LT_Updated)
View(Painter_LT)
Painter_LT$YearMonth <- format(as.Date(Painter_LT$DateTime), "%Y-%m")
View(Painter_LT)
summary(Painter_LT)
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#All 3 excell files I'm going to read in are CSV's.
Painter_LT <- read.csv("Painter_Land_X_QC.csv")
Painter_ST00 <- read.csv("Painter_Stream_X_QC.csv")
Painter_ST01 <- read.csv("Painter_Stream0_X_QC.csv")
#The problem is the stream temperature data is split up into two data sets, and I want them as 1 data set.
#So lets merge the two.
Painter_ST <- merge(Painter_ST00, Painter_ST01, all = TRUE)
#To arrange dates in right order, install dplyr package.
install.packages("dplyr")
library(dplyr)
#Now to arrange dates in right order:
Painter_ST <- arrange(Painter_ST, DateTime)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Painter_LT$DateTime)
class(Painter_ST$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Painter_LT$DateTime <- as.POSIXct(Painter_LT$DateTime)
class(Painter_LT$DateTime)
summary(Painter_LT)
install.packages("dplyr")
install.packages("lubridate")
Painter_ST$DateTime <- as.POSIXct(Painter_ST$DateTime)
class(Painter_ST$DateTime)
summary(Painter_ST)
Painter_LT$YearMonth <- format(as.Date(Painter_LT$DateTime), "%Y-%m")
summary(Painter_LT)
Painter_ST$YearMonth <- format(as.Date(Painter_ST$DateTime), "%Y-%m")
summary(Painter_ST)
View(Painter_ST)
Painter_Stream_Summary <- Painter_ST %>%
select(YearMonth, Temp_C) %>%
group_by(YearMonth) %>%
arrange(YearMonth) %>%
summarise(AvgYearMonthTemp = mean(Temp_C))
View(Painter_Stream_Summary)
Painter_Land_Summary <- Painter_LT %>%
select(YearMonth, Temp_C) %>%
group_by(YearMonth) %>%
arrange(YearMonth) %>%
summarise(AvgYearMonthTemp = mean(Temp_C))
View(Painter_Land_Summary)
install.packages("readxl")
library(readxl)
