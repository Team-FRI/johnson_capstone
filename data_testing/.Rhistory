setwd("C:/GitHub/johnson_capstone")
setwd("C:/GitHub/johnson_capstone/data_testing")
setwd("C:\GitHub\johnson_capstone\data_testing")
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
setwd("C:/GitHub/johnson_capstone/data_testing")
setwd("C:/GitHub/johnson_capstone/data_testing_1")
#Download Read xl package so R can read in your data
install.packages("readxl")
library(readxl)
Brunnerdale_temp_stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Stream_X_QC")
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
Brunnerdale_temp_stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Stream_X_QC")
Data1.xlsx.tibble <- read_excel("Brunnerdale_Run_Stream_X_QC")
Data1.xlsx.tibble <- read_excel("Brunnerdale_Run_Stream_X_QC.xlsx")
#Download Read xl package so R can read in your data
install.packages("readxl")
library(readxl)
detach("package:readxl", unload = TRUE)
library(readxl)
Data1.xlsx.tibble <- read_excel("Data.xlsx")
Brunnerdale_temp_stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Stream_X_QC")
?
Data1.xlsx.tibble <- read_excel("Data.xlsx")
Brunnerdale_temp_Stream.xlsx.tibble <- read_exce?l("Brunnerdale_Run_Stream_X_QC")
Brunnerdale_temp_stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Stream_X_QC")
Brunnerdale_temp_Stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Stream_X_QC")
Brunnerdale_temp_Stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Land_X_QC")
Brunnerdale_temp_Stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Land_X_QC")
Brunnerdale_temp_Stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Land_X_QC")
Brunnerdale_temp_Stream.xlsx.tibble <- read_excel("Brunnerdale_Run_Land_X_QC")
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#First we will need to download the readxl package since one out of the three data sets is a .xlsx
install.packages("readxl")
library(readxl)
#So now I will read in the .xlsx file "Data.xlsx"
Brunnerdale.ogdonia_FishRecords <- read_excel("Brunnerdale.ogdonia_FishRecords.xlsx")
#Beware that using the read_excel function turns the data into a "tibble format".
#In order to fix this, I need to do the as.data.frame function
Brunnerdale.ogdonia_FishRecords1 <- as.data.frame(Brunnerdale.ogdonia_FishRecords)
#This other 2 datasets we need to read in are not excell files, their CSV's.
#Read in water temp data for Long term Loyalsock Project at the Brunnerdale location.
Brunnerdale_Stream_Temp <- read.csv("Brunnerdale_Run_Stream_X_QC.csv")
Brunnerdale_Land_Temp <- read.csv("Brunnerdale_Run_Land_X_QC.csv")
#Now that both CSV's are red in, we need  a unique identifier that brings the two data sets together.
#Luckily, both the temperature and fish data was taken in the same location (Brunnerdale Run at Ogdonia).
#However, these are not currency columns in the data tables, so I need to add a column.
#So lets add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunndedale stream and air temp tables
Brunnerdale_Stream_Temp$Site_Name <- "Brunnerdale.ogdonia"
Brunnerdale_Land_Temp$Site_Name <- "Brunnerdale.ogdonia"
#Now also add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunnerdale.ogdonia_FishRecords1 fish records data set
Brunnerdale.ogdonia_FishRecords1$Site_Name <- "Brunnerdale.ogdonia"
#In order to bring the 3 datasets together I will need to R bind, but first I will need to remove the columns from the Brunnerdale_Fish_Records_1 file that I don't want to use to have the same number of columns as Brunnerdale_Stream_Temp
# See above lines and edit columns taken out bellow ^??????
Brunnerdale.ogdonia_FishRecords2 <- Brunnerdale.ogdonia_FishRecords1[,c(-3:-7, -9:-12)]
#Now we can finaly bring either all 3 data sets together, or just the fish records and either the land temperatue or water temperature data set together using the R bind function.
#But sicne the columns are not the same name, we need to downlaod this package so the R bind will work.
install.packages("dplyr")
library("dplyr")
Bind_ogdonia_masterland1 <- bind_rows(Brunnerdale.ogdonia_FishRecords2, Brunnerdale_Land_Temp)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#When you come back to this, mess with looper date package for dates and tidy verse pacage, and then building the actual different model and using both air and water temps, or one or the other!!!!
View(Brunnerdale_Stream_Temp)
View(Brunnerdale_Stream_Temp)
View(Brunnerdale_Land_Temp)
View(Brunnerdale_Land_Temp)
plot(Brunnerdale_Land_Temp$Temp_C, Brunnerdale_Land_Temp$DateTime)
Brunnerdale_Stream_Temp <- mutate(DateTime = ymd_hms(paste(year, month, day, hour, minute, second))
View(Brunnerdale_Stream_Temp)
Brunnerdale_Stream_Temp <- mutate(DateTime = ymd_hms(paste(year month, day, hour, minute, second)))
Brunnerdale_Stream_Temp <- mutate(DateTime = ymd_hms(paste(year, month, day, hour, minute, second)))
library(lubridate)
Brunnerdale_Stream_Temp <- mutate(DateTime = ymd_hms(paste(year, month, day, hour, minute, second)))
Brunnerdale_Stream_Temp <- mutate(DateTime = ymd_hms(paste(year, month, day, hour, minute, seconds)))
library("dplyr")
Brunnerdale_Stream_Temp <- (DateTime = ymd_hms(paste(year, month, day, hour, minute, second)))
library("lubridate")
Brunnerdale_Stream_Temp <- (DateTime = ymd_hms(paste(year, month, day, hour, minute, second)))
Brunnerdale_Stream_Temp <- mutate(DateTime = ymd_hms(paste(year, month, day, hour, minute, second)))
plot(Brunnerdale_Land_Temp$Temp_C, Brunnerdale_Land_Temp$DateTime)
Brunnerdale_Stream_Temp <- mutate(DateTime = ymd_hms(paste(year, month, day, hour, minute, second)))
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#First we will need to download the readxl package since one out of the three data sets is a .xlsx
install.packages("readxl")
library(readxl)
#So now I will read in the .xlsx file "Data.xlsx"
Brunnerdale.ogdonia_FishRecords <- read_excel("Brunnerdale.ogdonia_FishRecords.xlsx")
#Beware that using the read_excel function turns the data into a "tibble format".
#In order to fix this, I need to do the as.data.frame function
Brunnerdale.ogdonia_FishRecords1 <- as.data.frame(Brunnerdale.ogdonia_FishRecords)
#This other 2 datasets we need to read in are not excell files, their CSV's.
#Read in water temp data for Long term Loyalsock Project at the Brunnerdale location.
Brunnerdale_Stream_Temp <- read.csv("Brunnerdale_Run_Stream_X_QC.csv")
Brunnerdale_Land_Temp <- read.csv("Brunnerdale_Run_Land_X_QC.csv")
#Now that both CSV's are red in, we need  a unique identifier that brings the two data sets together.
#Luckily, both the temperature and fish data was taken in the same location (Brunnerdale Run at Ogdonia).
#However, these are not currency columns in the data tables, so I need to add a column.
#So lets add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunndedale stream and air temp tables
Brunnerdale_Stream_Temp$Site_Name <- "Brunnerdale.ogdonia"
Brunnerdale_Land_Temp$Site_Name <- "Brunnerdale.ogdonia"
#Now also add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunnerdale.ogdonia_FishRecords1 fish records data set
Brunnerdale.ogdonia_FishRecords1$Site_Name <- "Brunnerdale.ogdonia"
#In order to bring the 3 datasets together I will need to R bind, but first I will need to remove the columns from the Brunnerdale_Fish_Records_1 file that I don't want to use to have the same number of columns as Brunnerdale_Stream_Temp
# See above lines and edit columns taken out bellow ^??????
Brunnerdale.ogdonia_FishRecords2 <- Brunnerdale.ogdonia_FishRecords1[,c(-3:-7, -9:-12)]
#Now we can finaly bring either all 3 data sets together, or just the fish records and either the land temperatue or water temperature data set together using the R bind function.
#But sicne the columns are not the same name, we need to downlaod this package so the R bind will work.
install.packages("dplyr")
library("dplyr")
Bind_ogdonia_masterland1 <- bind_rows(Brunnerdale.ogdonia_FishRecords2, Brunnerdale_Land_Temp)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
<<<<<<< Updated upstream
plot(Brunnerdale_Land_Temp$Temp_C, Brunnerdale_Land_Temp$DateTime)
Brunnerdale_Stream_Temp <- mutate(DateTime = ymd_hms(paste(year, month, day, hour, minute, second)))
Brunnerdale_Land_Temp$DateTime <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Land_Temp_Updated)
>>>>>>> Stashed changes
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Land_Temp_Updated)
View(Brunnerdale_Land_Temp_Updated)
View(Brunnerdale_Land_Temp_Updated)
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=year, Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=Year, Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=Year(Brunnerdale_Land_Temp$DateTime, label = TRUE))
rlang::last_trace()
rlang::last_trace(drop = FALSE)
Brunnerdale_Stream_Temp <- Brunnerdale_Stream_Temp %>%
mutate(Month=month(Brunnerdale_Stream_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Stream_Temp)
View(Brunnerdale_Land_Temp)
View(Brunnerdale_Land_Temp)
class(Brunnerdale_Stream_Temp$DateTime)
Brunnerdale_Stream_Temp$DateTime <- as.POSIXct(Brunnerdale_Stream_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
Brunnerdale_Stream_Temp <- Brunnerdale_Stream_Temp %>%
mutate(Month=month(Brunnerdale_Stream_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Stream_Temp)
View(Brunnerdale_Stream_Temp)
View(Brunnerdale_Stream_Temp)
Brunnerdale_Stream_Temp_updated <- Brunnerdale_Stream_Temp %>%
mutate(Month=month(Brunnerdale_Stream_Temp$DateTime, label = TRUE))
View(Brunnerdale_Land_Temp_Updated)
View(Brunnerdale_Land_Temp_Updated)
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#First we will need to download the readxl package since one out of the three data sets is a .xlsx
install.packages("readxl")
library(readxl)
#So now I will read in the .xlsx file "Data.xlsx"
Brunnerdale.ogdonia_FishRecords <- read_excel("Brunnerdale.ogdonia_FishRecords.xlsx")
#Beware that using the read_excel function turns the data into a "tibble format".
#In order to fix this, I need to do the as.data.frame function
Brunnerdale.ogdonia_FishRecords1 <- as.data.frame(Brunnerdale.ogdonia_FishRecords)
#This other 2 datasets we need to read in are not excell files, their CSV's.
#Read in water temp data for Long term Loyalsock Project at the Brunnerdale location.
Brunnerdale_Stream_Temp <- read.csv("Brunnerdale_Run_Stream_X_QC.csv")
Brunnerdale_Land_Temp <- read.csv("Brunnerdale_Run_Land_X_QC.csv")
#Now that both CSV's are red in, we need  a unique identifier that brings the two data sets together.
#Luckily, both the temperature and fish data was taken in the same location (Brunnerdale Run at Ogdonia).
#However, these are not currency columns in the data tables, so I need to add a column.
#So lets add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunndedale stream and air temp tables
Brunnerdale_Stream_Temp$Site_Name <- "Brunnerdale.ogdonia"
Brunnerdale_Land_Temp$Site_Name <- "Brunnerdale.ogdonia"
#Now also add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunnerdale.ogdonia_FishRecords1 fish records data set
Brunnerdale.ogdonia_FishRecords1$Site_Name <- "Brunnerdale.ogdonia"
#In order to bring the 3 datasets together I will need to R bind, but first I will need to remove the columns from the Brunnerdale_Fish_Records_1 file that I don't want to use to have the same number of columns as Brunnerdale_Stream_Temp
# See above lines and edit columns taken out bellow ^??????
Brunnerdale.ogdonia_FishRecords2 <- Brunnerdale.ogdonia_FishRecords1[,c(-3:-7, -9:-12)]
#Now we can finaly bring either all 3 data sets together, or just the fish records and either the land temperatue or water temperature data set together using the R bind function.
#But sicne the columns are not the same name, we need to downlaod this package so the R bind will work.
install.packages("dplyr")
library("dplyr")
Bind_ogdonia_masterland1 <- bind_rows(Brunnerdale.ogdonia_FishRecords2, Brunnerdale_Land_Temp)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#When you come back to this, mess with luberdate package for dates and tidy verse pacage, and then building the actual different model and using both air and water temps, or one or the other!!!!
#Always X and then Y for plots!
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Brunnerdale_Land_Temp$DateTime <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Do same thing for stream temp
Brunnerdale_Stream_Temp$DateTime <- as.POSIXct(Brunnerdale_Stream_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Now that its in the proper format, have to extract month as an individual column.
#First do land temp
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Land_Temp_Updated)
#Now do stream temp
Brunnerdale_Stream_Temp_updated <- Brunnerdale_Stream_Temp %>%
mutate(Month=month(Brunnerdale_Stream_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Stream_Temp)
View(Brunnerdale_Stream_Temp_updated)
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp_Updated1 %>%
as.yearmon(paste(df$year, df$month), "%Y %m")
Brunnerdale_Land_Temp_Updated1$date <- Brunnerdale_Land_Temp_Updated1 %>%
as.yearmon(paste(df$year, df$month), "%Y %m")
#Messing with YYY-MM Stuff Bellow
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=Year(Brunnerdale_Land_Temp$DateTime, label = TRUE))
#Messing with YYY-MM Stuff Bellow
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=Year(Brunnerdale_Land_Temp$DateTime, label = TRUE))
#Messing with YYY-MM Stuff Bellow
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=year(Brunnerdale_Land_Temp$DateTime, label = TRUE))
View(Brunnerdale_Stream_Temp_updated)
Brunnerdale_Land_Temp_Updated1 <-
Brunnerdale_Land_Temp_Updated1(Brunnerdale_Land_Temp_Updated$DateTime, quiet = FALSE, tz = NULL)
Brunnerdale_Land_Temp_Updated1 <-
Brunnerdale_Land_Temp_Updated1 <- (Brunnerdale_Land_Temp_Updated$DateTime, quiet = FALSE, tz = NULL)
Brunnerdale_Land_Temp_Updated1 <-
Brunnerdale_Land_Temp_Updated1 <- my(Brunnerdale_Land_Temp_Updated$DateTime)
Brunnerdale_Land_Temp_Updated1 <-
my(Brunnerdale_Land_Temp_Updated$DateTime)
Brunnerdale_Land_Temp_Updated1 <- as.Date(with(df, paste(year, mon, day,sep="-")), "%Y-%m-%d")
Brunnerdale_Land_Temp_Updated1 %>%
mutate(date = make_date(year, month))
#Messing with YYY-MM Stuff Bellow
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=year(Brunnerdale_Land_Temp$DateTime, label = FALSE))
#Messing with YYY-MM Stuff Bellow
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=year(Brunnerdale_Land_Temp$DateTime))
View(Brunnerdale_Land_Temp_Updated1)
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#First we will need to download the readxl package since one out of the three data sets is a .xlsx
install.packages("readxl")
library(readxl)
#So now I will read in the .xlsx file "Data.xlsx"
Brunnerdale.ogdonia_FishRecords <- read_excel("Brunnerdale.ogdonia_FishRecords.xlsx")
#Beware that using the read_excel function turns the data into a "tibble format".
#In order to fix this, I need to do the as.data.frame function
Brunnerdale.ogdonia_FishRecords1 <- as.data.frame(Brunnerdale.ogdonia_FishRecords)
#This other 2 datasets we need to read in are not excell files, their CSV's.
#Read in water temp data for Long term Loyalsock Project at the Brunnerdale location.
Brunnerdale_Stream_Temp <- read.csv("Brunnerdale_Run_Stream_X_QC.csv")
Brunnerdale_Land_Temp <- read.csv("Brunnerdale_Run_Land_X_QC.csv")
#Now that both CSV's are red in, we need  a unique identifier that brings the two data sets together.
#Luckily, both the temperature and fish data was taken in the same location (Brunnerdale Run at Ogdonia).
#However, these are not currency columns in the data tables, so I need to add a column.
#So lets add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunndedale stream and air temp tables
Brunnerdale_Stream_Temp$Site_Name <- "Brunnerdale.ogdonia"
Brunnerdale_Land_Temp$Site_Name <- "Brunnerdale.ogdonia"
#Now also add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunnerdale.ogdonia_FishRecords1 fish records data set
Brunnerdale.ogdonia_FishRecords1$Site_Name <- "Brunnerdale.ogdonia"
#In order to bring the 3 datasets together I will need to R bind, but first I will need to remove the columns from the Brunnerdale_Fish_Records_1 file that I don't want to use to have the same number of columns as Brunnerdale_Stream_Temp
# See above lines and edit columns taken out bellow ^??????
Brunnerdale.ogdonia_FishRecords2 <- Brunnerdale.ogdonia_FishRecords1[,c(-3:-7, -9:-12)]
#Now we can finaly bring either all 3 data sets together, or just the fish records and either the land temperatue or water temperature data set together using the R bind function.
#But sicne the columns are not the same name, we need to downlaod this package so the R bind will work.
install.packages("dplyr")
library("dplyr")
Bind_ogdonia_masterland1 <- bind_rows(Brunnerdale.ogdonia_FishRecords2, Brunnerdale_Land_Temp)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#When you come back to this, mess with luberdate package for dates and tidy verse pacage, and then building the actual different model and using both air and water temps, or one or the other!!!!
#Always X and then Y for plots!
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Brunnerdale_Land_Temp$DateTime <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Do same thing for stream temp
Brunnerdale_Stream_Temp$DateTime <- as.POSIXct(Brunnerdale_Stream_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Now that its in the proper format, have to extract month as an individual column.
#First do land temp
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Land_Temp_Updated)
#Now do stream temp
Brunnerdale_Stream_Temp_updated <- Brunnerdale_Stream_Temp %>%
mutate(Month=month(Brunnerdale_Stream_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Stream_Temp)
#Bellow seemed to work to get year as a column
Brunnerdale_Land_Temp_Updated1 <- Brunnerdale_Land_Temp %>%
mutate(Year=year(Brunnerdale_Land_Temp$DateTime))
#But I can't figure out how to combine it as [YYYY-MM].
View(Brunnerdale_Land_Temp_Updated)
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#First we will need to download the readxl package since one out of the three data sets is a .xlsx
install.packages("readxl")
library(readxl)
#So now I will read in the .xlsx file "Data.xlsx"
Brunnerdale.ogdonia_FishRecords <- read_excel("Brunnerdale.ogdonia_FishRecords.xlsx")
#Beware that using the read_excel function turns the data into a "tibble format".
#In order to fix this, I need to do the as.data.frame function
Brunnerdale.ogdonia_FishRecords1 <- as.data.frame(Brunnerdale.ogdonia_FishRecords)
#This other 2 datasets we need to read in are not excell files, their CSV's.
#Read in water temp data for Long term Loyalsock Project at the Brunnerdale location.
Brunnerdale_Stream_Temp <- read.csv("Brunnerdale_Run_Stream_X_QC.csv")
Brunnerdale_Land_Temp <- read.csv("Brunnerdale_Run_Land_X_QC.csv")
#Now that both CSV's are red in, we need  a unique identifier that brings the two data sets together.
#Luckily, both the temperature and fish data was taken in the same location (Brunnerdale Run at Ogdonia).
#However, these are not currency columns in the data tables, so I need to add a column.
#So lets add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunndedale stream and air temp tables
Brunnerdale_Stream_Temp$Site_Name <- "Brunnerdale.ogdonia"
Brunnerdale_Land_Temp$Site_Name <- "Brunnerdale.ogdonia"
#Now also add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunnerdale.ogdonia_FishRecords1 fish records data set
Brunnerdale.ogdonia_FishRecords1$Site_Name <- "Brunnerdale.ogdonia"
#In order to bring the 3 datasets together I will need to R bind, but first I will need to remove the columns from the Brunnerdale_Fish_Records_1 file that I don't want to use to have the same number of columns as Brunnerdale_Stream_Temp
# See above lines and edit columns taken out bellow ^??????
Brunnerdale.ogdonia_FishRecords2 <- Brunnerdale.ogdonia_FishRecords1[,c(-3:-7, -9:-12)]
#Now we can finaly bring either all 3 data sets together, or just the fish records and either the land temperatue or water temperature data set together using the R bind function.
#But sicne the columns are not the same name, we need to downlaod this package so the R bind will work.
install.packages("dplyr")
library("dplyr")
Bind_ogdonia_masterland1 <- bind_rows(Brunnerdale.ogdonia_FishRecords2, Brunnerdale_Land_Temp)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#When you come back to this, mess with luberdate package for dates and tidy verse pacage, and then building the actual different model and using both air and water temps, or one or the other!!!!
#Always X and then Y for plots!
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Brunnerdale_Land_Temp$DateTime <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Do same thing for stream temp
Brunnerdale_Stream_Temp$DateTime <- as.POSIXct(Brunnerdale_Stream_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Now that its in the proper format, have to extract month as an individual column.
#First do land temp
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Land_Temp_Updated)
#Now do stream temp
Brunnerdale_Stream_Temp_updated <- Brunnerdale_Stream_Temp %>%
mutate(Month=month(Brunnerdale_Stream_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Stream_Temp)
install.packages("readxl")
install.packages("dplyr")
install.packages("lubridate")
install.packages("lubridate")
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#First we will need to download the readxl package since one out of the three data sets is a .xlsx
install.packages("readxl")
library(readxl)
#So now I will read in the .xlsx file "Data.xlsx"
Brunnerdale.ogdonia_FishRecords <- read_excel("Brunnerdale.ogdonia_FishRecords.xlsx")
#Beware that using the read_excel function turns the data into a "tibble format".
#In order to fix this, I need to do the as.data.frame function
Brunnerdale.ogdonia_FishRecords1 <- as.data.frame(Brunnerdale.ogdonia_FishRecords)
#This other 2 datasets we need to read in are not excell files, their CSV's.
#Read in water temp data for Long term Loyalsock Project at the Brunnerdale location.
Brunnerdale_Stream_Temp <- read.csv("Brunnerdale_Run_Stream_X_QC.csv")
Brunnerdale_Land_Temp <- read.csv("Brunnerdale_Run_Land_X_QC.csv")
#Now that both CSV's are red in, we need  a unique identifier that brings the two data sets together.
#Luckily, both the temperature and fish data was taken in the same location (Brunnerdale Run at Ogdonia).
#However, these are not currency columns in the data tables, so I need to add a column.
#So lets add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunndedale stream and air temp tables
Brunnerdale_Stream_Temp$Site_Name <- "Brunnerdale.ogdonia"
Brunnerdale_Land_Temp$Site_Name <- "Brunnerdale.ogdonia"
#Now also add the column "Site Name" consiting of "Brunnerdale.ogdonia" to the Brunnerdale.ogdonia_FishRecords1 fish records data set
Brunnerdale.ogdonia_FishRecords1$Site_Name <- "Brunnerdale.ogdonia"
#In order to bring the 3 datasets together I will need to R bind, but first I will need to remove the columns from the Brunnerdale_Fish_Records_1 file that I don't want to use to have the same number of columns as Brunnerdale_Stream_Temp
# See above lines and edit columns taken out bellow ^??????
Brunnerdale.ogdonia_FishRecords2 <- Brunnerdale.ogdonia_FishRecords1[,c(-3:-7, -9:-12)]
#Now we can finaly bring either all 3 data sets together, or just the fish records and either the land temperatue or water temperature data set together using the R bind function.
#But sicne the columns are not the same name, we need to downlaod this package so the R bind will work.
install.packages("dplyr")
library("dplyr")
Bind_ogdonia_masterland1 <- bind_rows(Brunnerdale.ogdonia_FishRecords2, Brunnerdale_Land_Temp)
#Before I try to compare fish and temperature together, I want to just look at temperature alone first.
#But first we need to format that date and time. To do that, lets install the luberdate package.
install.packages("lubridate")
library("lubridate")
#When you come back to this, mess with luberdate package for dates and tidy verse pacage, and then building the actual different model and using both air and water temps, or one or the other!!!!
#Always X and then Y for plots!
#Now need to get R to reed this as a year date and time rather than a string of numbers.
class(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
#It's eneterd as a character, so need to change it to POSIXct
#First do land temp
Brunnerdale_Land_Temp$DateTime <- as.POSIXct(Brunnerdale_Land_Temp$DateTime)
class(Brunnerdale_Land_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Do same thing for stream temp
Brunnerdale_Stream_Temp$DateTime <- as.POSIXct(Brunnerdale_Stream_Temp$DateTime)
class(Brunnerdale_Stream_Temp$DateTime)
summary(Brunnerdale_Land_Temp)
#Now that its in the proper format, have to extract month as an individual column.
#First do land temp
Brunnerdale_Land_Temp_Updated <- Brunnerdale_Land_Temp %>%
mutate(Month=month(Brunnerdale_Land_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Land_Temp_Updated)
#Now do stream temp
Brunnerdale_Stream_Temp_updated <- Brunnerdale_Stream_Temp %>%
mutate(Month=month(Brunnerdale_Stream_Temp$DateTime, label = TRUE))
summary(Brunnerdale_Stream_Temp)
install.packages("readxl")
install.packages("dplyr")
install.packages("lubridate")
install.packages("dplyr")
Brunnerdale_Stream_Temp_updated <- Brunnerdale_Stream_Temp %>%
mutate(Year=year(Brunnerdale_Stream_Temp$DateTime))
View(Brunnerdale_Stream_Temp_updated)
detach("package:base", unload = TRUE)
detach("package:dplyr", unload = TRUE)
detach("package:datasets", unload = TRUE)
detach("package:grDevices", unload = TRUE)
detach("package:graphics", unload = TRUE)
detach("package:lubridate", unload = TRUE)
detach("package:methods", unload = TRUE)
detach("package:stats", unload = TRUE)
detach("package:utils", unload = TRUE)
detach("package:readxl", unload = TRUE)
#Set working directory
setwd("C:/GitHub/johnson_capstone/data_testing")
getwd()
dir()
#First we will need to download the readxl package since one out of the three data sets is a .xlsx
install.packages("readxl")
