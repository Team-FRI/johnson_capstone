<<<<<<< Updated upstream
Rock.LittleLoyalsock_Land_Feb21<-Rock.LittleLoyalsock_Land_orig%>%
filter(!(DateTime<ymd_hms("2021-02-01 00:00:00")|DateTime>ymd_hms("2021-02-28 23:59:59")))
Rock.LittleLoyalsock_Land_Feb21
tail(Rock.LittleLoyalsock_Land_Feb21)
Rock.LittleLoyalsock_Stream_Feb21<-Rock.LittleLoyalsock_Stream_QC%>%
filter(!(DateTime<ymd_hms("2021-02-01 00:00:00")|DateTime>ymd_hms("2021-02-28 23:59:59")))
Rock.LittleLoyalsock_Stream_Feb21 # 24609
tail(Rock.LittleLoyalsock_Stream_Feb21) # 27584
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Feb21$ID,Rock.LittleLoyalsock_Land_Feb21$Temp_C,
type="n",xlim=c(21754,24441),   ylim=c(-10,5)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Feb21$ID,Rock.LittleLoyalsock_Land_Feb21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Feb21$ID,Rock.LittleLoyalsock_Stream_Feb21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Feb21$ID,Rock.LittleLoyalsock_Land_Feb21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Feb21$ID,Rock.LittleLoyalsock_Stream_Feb21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(21700,21800,21900,22000,22100,22200,22300,22400,22500,22600,22700,22800,
22900,23000,23100,23200,23300,23400,23500,23600,23700,23800,23900,24000,
24100,24200,24300,24400,24500)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=-10   ,labels=T,tck=10)
maj2<-c(-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=21700,tck=1)#y-axis add tck=1 for gridlines
#Water temp
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Feb21$ID,Rock.LittleLoyalsock_Land_Feb21$Temp_C,
type="n",xlim=c(21754,24441),   ylim=c(-15,5)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Feb21$ID,Rock.LittleLoyalsock_Land_Feb21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Feb21$ID,Rock.LittleLoyalsock_Stream_Feb21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Feb21$ID,Rock.LittleLoyalsock_Land_Feb21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Feb21$ID,Rock.LittleLoyalsock_Stream_Feb21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(21700,21800,21900,22000,22100,22200,22300,22400,22500,22600,22700,22800,
22900,23000,23100,23200,23300,23400,23500,23600,23700,23800,23900,24000,
24100,24200,24300,24400,24500)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=-15   ,labels=T,tck=10)
maj2<-c(-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=21700,tck=1)#y-axis add tck=1 for gridlines
#Water temp
#Need to visualize March 2021 log time to see if water temp matches air.
Rock.LittleLoyalsock_Land_Mar21<-Rock.LittleLoyalsock_Land_orig%>%
filter(!(DateTime<ymd_hms("2021-03-01 00:00:00")|DateTime>ymd_hms("2021-03-31 23:59:59")))
Rock.LittleLoyalsock_Land_Mar21
tail(Rock.LittleLoyalsock_Land_Mar21)
Rock.LittleLoyalsock_Stream_Mar21<-Rock.LittleLoyalsock_Stream_QC%>%
filter(!(DateTime<ymd_hms("2021-03-01 00:00:00")|DateTime>ymd_hms("2021-03-31 23:59:59")))
Rock.LittleLoyalsock_Stream_Mar21
tail(Rock.LittleLoyalsock_Stream_Mar21)
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type="n",xlim=c(24442,27417),   ylim=c(-8,15)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Mar21$ID,Rock.LittleLoyalsock_Stream_Mar21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Mar21$ID,Rock.LittleLoyalsock_Stream_Mar21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(24400,24500,24600,24700,24800,24900,25000,25100,25200,25300,25400,25500,
25600,25700,25800,25900,26000,26100,26200,26300,26400,26500,26600,26700,
26800,26900,27000,27100,27200,27300,27400,27500)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=-8   ,labels=T,tck=10)
maj2<-c(-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=24400,tck=1)#y-axis add tck=1 for gridlines
#Water temp????
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type="n",xlim=c(24442,27417),   ylim=c(-10,20)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Mar21$ID,Rock.LittleLoyalsock_Stream_Mar21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Mar21$ID,Rock.LittleLoyalsock_Stream_Mar21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(24400,24500,24600,24700,24800,24900,25000,25100,25200,25300,25400,25500,
25600,25700,25800,25900,26000,26100,26200,26300,26400,26500,26600,26700,
26800,26900,27000,27100,27200,27300,27400,27500)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=-10   ,labels=T,tck=10)
maj2<-c(-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,
17,18,19,20)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=24400,tck=1)#y-
#Need to visualize April 2021 log time to see if water temp matches air.
Rock.LittleLoyalsock_Land_Apr21<-Rock.LittleLoyalsock_Land_orig%>%
filter(!(DateTime<ymd_hms("2021-04-01 00:00:00")|DateTime>ymd_hms("2021-04-30 23:59:59")))
Rock.LittleLoyalsock_Land_Apr21
tail(Rock.LittleLoyalsock_Land_Apr21)
Rock.LittleLoyalsock_Stream_Apr21<-Rock.LittleLoyalsock_Stream_QC%>%
filter(!(DateTime<ymd_hms("2021-04-01 00:00:00")|DateTime>ymd_hms("2021-04-30 23:59:59")))
Rock.LittleLoyalsock_Stream_Apr21
tail(Rock.LittleLoyalsock_Stream_Apr21)
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type="n",xlim=c(27418,30297),   ylim=c(-5,20)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Apr21$ID,Rock.LittleLoyalsock_Stream_Apr21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Apr21$ID,Rock.LittleLoyalsock_Stream_Apr21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(27400,27500,27600,27700,27800,27900,28000,28100,28200,28300,28400,28500,
28600,28700,28800,28900,29000,29100,29200,29300,29400,29500,29600,29700,
29800,29900,30000,30100,30200,30300)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=-5   ,labels=T,tck=10)
maj2<-c(-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=27400,tck=1)#y-axis add tck=1 for gridlines
#Air Temp
#Need to visualize May 2021 log time to see if water temp matches air.
Rock.LittleLoyalsock_Land_May21<-Rock.LittleLoyalsock_Land_orig%>%
filter(!(DateTime<ymd_hms("2021-05-01 00:00:00")|DateTime>ymd_hms("2021-05-31 23:59:59")))
Rock.LittleLoyalsock_Land_May21
tail(Rock.LittleLoyalsock_Land_May21)
Rock.LittleLoyalsock_Stream_May21<-Rock.LittleLoyalsock_Stream_QC%>%
filter(!(DateTime<ymd_hms("2021-05-01 00:00:00")|DateTime>ymd_hms("2021-05-31 23:59:59")))
Rock.LittleLoyalsock_Stream_May21
tail(Rock.LittleLoyalsock_Stream_May21)
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_May21$ID,Rock.LittleLoyalsock_Land_May21$Temp_C,
type="n",xlim=c(30298,33273),   ylim=c(0,23)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_May21$ID,Rock.LittleLoyalsock_Land_May21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_May21$ID,Rock.LittleLoyalsock_Stream_May21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_May21$ID,Rock.LittleLoyalsock_Land_May21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_May21$ID,Rock.LittleLoyalsock_Stream_May21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(30200,30300,30400,30500,30600,30700,30800,30900,31000,31100,31200,31300,31400,31500,
31600,31700,31800,31900,32000,32100,32200,32300,32400,32500,32600,32700,
32800,32900,33000,33100,33200,33300)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=0   ,labels=T,tck=10)
maj2<-c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=30200,tck=1)#y-axis add tck=1 for gridlines
#Air Temp
#Need to visualize June 2021 log time to see if water temp matches air.
Rock.LittleLoyalsock_Land_Jun21<-Rock.LittleLoyalsock_Land_orig%>%
filter(!(DateTime<ymd_hms("2021-06-01 00:00:00")|DateTime>ymd_hms("2021-06-30 23:59:59")))
Rock.LittleLoyalsock_Land_Jun21
tail(Rock.LittleLoyalsock_Land_Jun21)
Rock.LittleLoyalsock_Stream_Jun21<-Rock.LittleLoyalsock_Stream_QC%>%
filter(!(DateTime<ymd_hms("2021-06-01 00:00:00")|DateTime>ymd_hms("2021-06-30 23:59:59")))
Rock.LittleLoyalsock_Stream_Jun21 #
tail(Rock.LittleLoyalsock_Stream_Jun21) #
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Jun21$ID,Rock.LittleLoyalsock_Land_Jun21$Temp_C,
type="n",xlim=c(33274,36153),   ylim=c(4,28)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Jun21$ID,Rock.LittleLoyalsock_Land_Jun21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Jun21$ID,Rock.LittleLoyalsock_Stream_Jun21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Jun21$ID,Rock.LittleLoyalsock_Land_Jun21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Jun21$ID,Rock.LittleLoyalsock_Stream_Jun21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(33200,33000,33400,33500,33600,33700,33800,33900,34000,34100,34200,34300,34400,34500,
34600,34700,34800,34900,35000,35100,35200,35300,35400,35500,35600,35700,
35800,35900,36000,36100,36200)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=4   ,labels=T,tck=10)
maj2<-c(4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=33200,tck=1)#y-axis add tck=1 for gridlines
#Air Temp
#Need to visualize April 2021 log time to see if water temp matches air.
Rock.LittleLoyalsock_Land_Apr21<-Rock.LittleLoyalsock_Land_orig%>%
filter(!(DateTime<ymd_hms("2021-04-01 00:00:00")|DateTime>ymd_hms("2021-04-30 23:59:59")))
Rock.LittleLoyalsock_Land_Apr21
tail(Rock.LittleLoyalsock_Land_Apr21)
Rock.LittleLoyalsock_Stream_Apr21<-Rock.LittleLoyalsock_Stream_QC%>%
filter(!(DateTime<ymd_hms("2021-04-01 00:00:00")|DateTime>ymd_hms("2021-04-30 23:59:59")))
Rock.LittleLoyalsock_Stream_Apr21
tail(Rock.LittleLoyalsock_Stream_Apr21)
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type="n",xlim=c(27418,30297),   ylim=c(-5,20)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Apr21$ID,Rock.LittleLoyalsock_Stream_Apr21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Apr21$ID,Rock.LittleLoyalsock_Stream_Apr21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(27400,27500,27600,27700,27800,27900,28000,28100,28200,28300,28400,28500,
28600,28700,28800,28900,29000,29100,29200,29300,29400,29500,29600,29700,
29800,29900,30000,30100,30200,30300)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=-5   ,labels=T,tck=10)
maj2<-c(-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=27400,tck=1)#y-axis add tck=1 for gridlines
#Air Temp
#Need to visualize March 2021 log time to see if water temp matches air.
Rock.LittleLoyalsock_Land_Mar21<-Rock.LittleLoyalsock_Land_orig%>%
filter(!(DateTime<ymd_hms("2021-03-01 00:00:00")|DateTime>ymd_hms("2021-03-31 23:59:59")))
Rock.LittleLoyalsock_Land_Mar21
tail(Rock.LittleLoyalsock_Land_Mar21)
Rock.LittleLoyalsock_Stream_Mar21<-Rock.LittleLoyalsock_Stream_QC%>%
filter(!(DateTime<ymd_hms("2021-03-01 00:00:00")|DateTime>ymd_hms("2021-03-31 23:59:59")))
Rock.LittleLoyalsock_Stream_Mar21
tail(Rock.LittleLoyalsock_Stream_Mar21)
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type="n",xlim=c(24442,27417),   ylim=c(-10,20)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Mar21$ID,Rock.LittleLoyalsock_Stream_Mar21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Mar21$ID,Rock.LittleLoyalsock_Land_Mar21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Mar21$ID,Rock.LittleLoyalsock_Stream_Mar21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(24400,24500,24600,24700,24800,24900,25000,25100,25200,25300,25400,25500,
25600,25700,25800,25900,26000,26100,26200,26300,26400,26500,26600,26700,
26800,26900,27000,27100,27200,27300,27400,27500)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=-10   ,labels=T,tck=10)
maj2<-c(-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,
17,18,19,20)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=24400,tck=1)#y-axis add tck=1 for gridlines
#Water temp????
#Need to visualize April 2021 log time to see if water temp matches air.
Rock.LittleLoyalsock_Land_Apr21<-Rock.LittleLoyalsock_Land_orig%>%
filter(!(DateTime<ymd_hms("2021-04-01 00:00:00")|DateTime>ymd_hms("2021-04-30 23:59:59")))
Rock.LittleLoyalsock_Land_Apr21
tail(Rock.LittleLoyalsock_Land_Apr21)
Rock.LittleLoyalsock_Stream_Apr21<-Rock.LittleLoyalsock_Stream_QC%>%
filter(!(DateTime<ymd_hms("2021-04-01 00:00:00")|DateTime>ymd_hms("2021-04-30 23:59:59")))
Rock.LittleLoyalsock_Stream_Apr21
tail(Rock.LittleLoyalsock_Stream_Apr21)
#Plot
x11(height=12,width=16)#brings plot outside of RStudio, controls plot window size
op<-par(mar=c(2,4,1,1), bty = "n")
plot(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type="n",xlim=c(27418,30297),   ylim=c(-5,20)   ,xlab="",ylab="",axes=F,bty="n")
points(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type="p",pch=18,cex=1.5)#solid diamonds
points(Rock.LittleLoyalsock_Stream_Apr21$ID,Rock.LittleLoyalsock_Stream_Apr21$Temp_C,
type="p",pch=21,bg="blue",cex=1.5)#blue circle
lines(Rock.LittleLoyalsock_Land_Apr21$ID,Rock.LittleLoyalsock_Land_Apr21$Temp_C,
type = "l",lty=1,lwd=1)
lines(Rock.LittleLoyalsock_Stream_Apr21$ID,Rock.LittleLoyalsock_Stream_Apr21$Temp_C,
type = "l",lty=3,col="blue",lwd=1)
maj1<-c(27400,27500,27600,27700,27800,27900,28000,28100,28200,28300,28400,28500,
28600,28700,28800,28900,29000,29100,29200,29300,29400,29500,29600,29700,
29800,29900,30000,30100,30200,30300)# IDs
axis(1,at=maj1,lty=1,lwd=0.5,   pos=-5   ,labels=T,tck=10)
maj2<-c(-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)#temps
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=27400,tck=1)#y-axis add tck=1 for gridlines
#Air Temp
=======
#  201206.Sand.MillMokoma,201206.Ellis.UpperLoyalsock,201306.Sherman.UpperLoyalsock
#  201306.Ellis.LoyalsockUpper
#     None of these Events are in 2019, 2020, or 2021
################################################################################
#Find YOY-Adult threshold with Length Frequency Histogram using BKTRecLoy for 2020 data
BKT2020TL<-BKTRecLoy%>%
filter(str_detect(EventCode,"2020"))
View(BKT2020TL)
BKT2020TL# - need to QC
hist(BKT2020TL$Length_mm,freq=T,breaks=22.32,axes=F)
maj1<-c(20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,
210,220,230,240)# Lengths
axis(1,at=maj1,lty=1,lwd=0.5, pos=0,labels=T)
maj2<-c(0,50,100,150,200,250,300,350,400,450,500,550,600,650,700)#Freq
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=22)#tck=1
#Threshold 75
################################################################################
#Create Adult/YOY Ratio using BKTRecLoy
#YOY < 75 (Length_mm)
#Adult >= 75 (Length_mm)
Ad_YOY<-BKTRecLoy %>%
group_by(EventCode)%>%
summarise(
Adult = sum(Length_mm > 75,.drop=F),
YOY = sum(Length_mm <=75,.drop=F),
TotalCount = n()
)
Ad_YOY
#RatioA_Y<-Ad_YOY %>%
#  mutate(RatioA_Y = Adult/YOY)
#RatioA_Y# what to do about events with YOY = 0
#Changing strategy to percent Adults - percent YOY
RatioAY<-Ad_YOY %>%
mutate(
PerA = Adult/TotalCount,
PerY = YOY/TotalCount,
RatAY = PerA-PerY
)
RatioAY
View(RatioAY)
Ad_YOY
RatioA_Y<-Ad_YOY %>%
#  mutate(RatioA_Y = Adult/YOY)
#RatioA_Y# what to do about events with YOY = 0
#Changing strategy to percent Adults - percent YOY
RatioAY<-Ad_YOY %>%
mutate(
PerA = Adult/TotalCount,
PerY = YOY/TotalCount,
RatAY = PerA-PerY
)
RatioA_Y<-Ad_YOY %>%
mutate(RatioA_Y = Adult/YOY)
View(RatioA_Y)
RatioAY<-Ad_YOY %>%
mutate(
PerA = Adult/TotalCount,
PerY = YOY/TotalCount,
RatAY = PerA-PerY
)
RatioAY
################################################################################
#Create CPUE_Count and CPUE_Biomass using FishSurLoy AND BKTRecLoy
CPUE<-left_join(FishSurLoyU,BKTEvtSum,by="EventCode")
CPUE
View(CPUE)
CPUEVar<-CPUE %>%
group_by(SiteCode,EventCode)%>%
summarise(
CPUE_Count = Count/Area,
CPUE_Biomass = Biomass/Area
)
CPUEVar #306 x 4
View(CPUEVar)
################################################################################
#Create CPUE_Count and CPUE_Biomass using FishSurLoy AND BKTRecLoy
CPUE<-left_join(FishSurLoyU,BKTEvtSum,by="EventCode")
CPUE
CPUEVar<-CPUE %>%
group_by(SiteCode,EventCode)%>%
summarise(
CPUE_Count = Count/Area *100,
CPUE_Biomass = Biomass/Area *100
)
CPUEVar #306 x 4
View(CPUEVar)
################################################################################
#Combine response variables to one tibble
BKTVar<-left_join(CPUEVar,RatioAY)%>%
select(!c(Adult,YOY,TotalCount,PerA,PerY))
BKTVar# 306 x 5
>>>>>>> Stashed changes
#Long-term (LT) Loyalsock (L) Surveys
#Logger Data Prep for Loops
#Created by Sara Ashcraft 2/18/2024
#Modified by Sara Ashcraft 3/26/24 - Adding files and working with predictor code.
#Load Library
library(tidyverse)
library(lubridate)
#Set working Directory
setwd("C:/GitHub/johnson_capstone/spring")
setwd("C:/Users/ashcraft/OneDrive - Susquehanna University/Desktop/FRI Folders/GitHub/UPdate/johnson_capstone/Spring")
#Load data - Stream Temp QC only
BearT<-read_csv("Bear.Loyalsock_Stream_QC.csv")
BrunT<-read_csv("Brunnerdale.Ogdonia_Stream_QC.csv")
#CoalT<-read_csv("Coal.Loyalsock_Stream_QC.csv") #Data is too unusual
ConkT<-read_csv("Conklin.Mill_Stream_QC.csv")
DryHBT<-read_csv("Dry.Hoagland_Stream_QC.csv")
DryLST<-read_csv("Dry.Loyalsock_Stream_QC.csv")
DutcT<-read_csv("Dutchman.Loyalsock_Stream_20202021_QC.csv")
ElliT<-read_csv("Ellis.Loyalsock_Stream_QC.csv")
FallT<-read_csv("Fall.Hoagland_Stream_20202021QC.csv")
FlagT<-read_csv("FlagMarsh.Pigeon_Stream_20202021QC.csv")
GranT<-read_csv("Grandad.Hessler_Stream_QC.csv")
####HuckT<-read_csv("") #No logger retrieved
#LakeT<-read_csv("Lake.Elk_Stream_QC.csv")
LeveT<-read_csv("Level.Lick_Stream_QC.csv")
####LickT<-read_csv("") #No logger retrieved
#MillT<-read_csv("Mill.Loyalsock_Stream_QC.csv")
PainT<-read_csv("Painter.LittleBear_Stream_20202021_QC.csv")
#PortT<-read_csv("Porter.Hoagland_Stream_QC.csv")
RedT<-read_csv("Red.LittleBear_Stream_QC.csv")
#RockT<-read_csv("Rock.LittleLoyalsock_Stream_QC.csv")
SandT<-read_csv("Sand.Mill_Stream_QC.csv")
SaSpT<-read_csv("SandSpring.LittleBear_Stream_QC.csv")
####ScarT<-read_csv("") #No logger retrieved
SherT<-read_csv("Sherman.Loyalsock_Stream_QC.csv")
ShinT<-read_csv("Shingle.Bear_Stream_QCSR.csv")
#SnakT<-read_csv("Snake.Bear_Stream_QC.csv")
StreT<-read_csv("Streby.Lick_Stream_QC.csv")
SwamT<-read_csv("Swamp.Hoagland_Stream_QC.csv")
####WeedT<-read_csv("") #No logger retrieved
YellT<-read_csv("Yellow.LittleLoyalsock_Stream_QC.csv")
######################
#Bind row so that all stream temperature data is in one tibble
StreamTemp<-rbind(BearT,BrunT,ConkT,DryHBT,DryLST,DutcT,ElliT,FallT,FlagT,GranT,
LeveT,PainT,RedT,SandT,SaSpT,StreT,SherT,ShinT,SwamT,YellT)
#   CoalT,LakeT,MillT,PortT,
#   RockT,SnakT)
StreamTemp
#####################
#Separate out Year-Month-Day-Time so that we can create different predictors.
ST<- StreamTemp %>% #Like this code better
mutate(
Date = format(as.Date(DateTime),"%Y-%m-%d"),
Year = format(as.Date(DateTime),"%Y"),
Month = format(as.Date(DateTime),"%m"),
Day = format(as.Date(DateTime),"%d")
)%>%
mutate_at(vars(Date),date)%>%
mutate_at(vars(Year,Month,Day),factor)
ST
#QC - Date,Year,Month
QCTempDate<-ST %>%
group_by(SiteCode,Date)%>%
summarize(Count=n())%>%
arrange(Date)
QCTempDate
#     only 43 dates for the sites included that are not full.
QCTempY<-ST %>%
group_by(SiteCode,Year)%>%
summarize(Count=n())%>%
arrange(Year)
QCTempY
#     Full year's worth of data ~ 35,040 logs
#     Site-Year with most logs: Brunnerdale-2021; Sherman-2021; Dutchman-2021;
#                               SandSpring-2021;
QCTempM<-ST %>%
group_by(SiteCode,Year,Month)%>%
summarize(Count=n())%>%
arrange(Month)
QCTempM
#      39 incomplete months
###############################################################################
#Create Min/Max reading for each Month-Year.
Monthly_Extremes <- ST %>%
group_by(SiteCode,Year, Month) %>%
summarise(
Highest_Temperature_C = max(Temp_C),
Lowest_Temperature_C = min(Temp_C)
)
Monthly_Extremes # 216 x 5
###############################################################################
#Create Avg Min/Max reading for each Month-Year
Daily_MinMax <- ST %>%
group_by(SiteCode,Date) %>%
summarise(
DailyMin_tempC = min(Temp_C),
DailyMax_tempC = max(Temp_C)
)
Daily_MinMax #5839 x4
YM<- Daily_MinMax %>% #Like this code better
mutate(
Date = format(as.Date(Date),"%Y-%m-%d"),
Year = format(as.Date(Date),"%Y"),
Month = format(as.Date(Date),"%m")
)%>%
mutate_at(vars(Date),date)%>%
mutate_at(vars(Year,Month),factor)
YM
#
Monthly_AvgMinMax <- YM %>%
group_by(SiteCode,Year, Month) %>%
summarise(
AvgMin=mean(DailyMin_tempC),
AvgMax=mean(DailyMax_tempC))
Monthly_AvgMinMax # 216 x 5
View(QCTempDate)
QCTempDate
View(QCTempY)
View(QCTempM)
QCTempM
Monthly_Extremes # 216 x 5
Daily_MinMax #5839 x4
Monthly_AvgMinMax # 216 x 5
#Join Monthly_Extremes and Monthly_AvgMinMax together
STPred<-left_join(Monthly_Extremes,Monthly_AvgMinMax, by = c("SiteCode","Year","Month"))
<<<<<<< Updated upstream
STPred #216 x 7
#      day = Midnight - 11:59pm;  <3 degrees c
TempsL3MY <- ST %>%
filter(Temp_C < 3) %>%
group_by(SiteCode, Year, Month, .drop=F) %>%
summarise(numberoflogs_MYL3 = n())
TempsL3MY #37 x4
#  Number of logs per Month Year less than 3 degrees Celsius with Year-Month
#      combos we don't need.
#Do a join to get rid of rows where no temp data was collected
LogCountL3<-left_join(QCTempM,TempsL3MY, by = c("SiteCode","Year","Month"))
LogCountL3 #216 x 5
PropLogL3<-LogCountL3%>%
mutate(
PropLogL3 = numberoflogs_MYL3/Count
)
PropLogL3 #216 X 6   - Will need to add to STPred
# Avg Year-Month Temp
Avg_YM_Temp <- ST %>%
group_by(SiteCode, Year, Month) %>%
summarise(
Avg_YM_TempC = mean(Temp_C))
Avg_YM_Temp #216 x 4   - Will need to add to STPred
#Midnight - 11:59pm <5 degrees c
TempsL5MY <- ST %>%
filter(Temp_C < 5) %>%
group_by(SiteCode, Year, Month, .drop=F) %>%
summarise(numberoflogs_MYL5 = n())
TempsL5MY
#  Number of logs per Month Year less than 5 degrees Celsius with Year-Month
#      combos we don't need.
#Do a join to get rid of rows where no temp data was collected
LogCountL5<-left_join(QCTempM,TempsL5MY, by = c("SiteCode","Year","Month"))
LogCountL5 #216 x 5
PropLogL5<-LogCountL5%>%
mutate(
PropLogL5 = numberoflogs_MYL5/Count
)
PropLogL5 #216 X 6   - Will need to add to STPred
#Midnight - 11:59pm <4.5 degrees c
TempsL4.5MY <- ST %>%
filter(Temp_C < 4.5) %>%
group_by(SiteCode, Year, Month,.drop=F) %>%
summarise(numberoflogs_MYL4.5 = n())
TempsL4.5MY
#  Number of logs per Month Year less than 4.5 degrees Celsius with Year-Month
#      combos we don't need.
#Do a join to get rid of rows where no temp data was collected
LogCountL4.5<-left_join(QCTempM,TempsL4.5MY, by = c("SiteCode","Year","Month"))
LogCountL4.5 #216 x 5
PropLogL4.5<-LogCountL4.5%>%
mutate(
PropLogL4.5 = numberoflogs_MYL4.5/Count
)
PropLogL4.5 #216 X 6   - Will need to add to STPred
#Midnight - 11:59pm >20 degrees c
TempsG20MY <- ST %>%
filter(Temp_C > 20) %>%
group_by(SiteCode, Year, Month, .drop=FALSE) %>%
summarise(numberoflogs_MYG20 = n())
TempsG20MY
#  Number of logs per Month Year greater than 20 degrees Celsius with Year-Month
#      combos we don't need.
#Do a join to get rid of rows where no temp data was collected
LogCountG20<-left_join(QCTempM,TempsG20MY, by = c("SiteCode","Year","Month"))
LogCountG20 #216 x 5
LogCountG20[is.na(LogCountG20)]<-0
PropLogG20<-LogCountG20%>%
mutate(
PropLogG20 = numberoflogs_MYG20/Count
)
PropLogG20 #216 X 6   - Will need to add to STPred
#Midnight - 11:59pm >24 degrees c
TempsG24MY <- ST %>%
filter(Temp_C > 24) %>%
group_by(SiteCode, Year, Month, .drop=F) %>%
summarise(numberoflogs_MYG24 = n())
TempsG24MY
#  Number of logs per Month Year greater than 24 degrees Celsius with Year-Month
#      combos we don't need.
#Do a join to get rid of rows where no temp data was collected
LogCountG24<-left_join(QCTempM,TempsG24MY, by = c("SiteCode","Year","Month"))
LogCountG24 #216 x 5
LogCountG24[is.na(LogCountG24)]<-0
PropLogG24<-LogCountG24%>%
mutate(
PropLogG24 = numberoflogs_MYG24/Count
)
PropLogG24 #216 X 6   - Will need to add to STPred
############################################################################################
#Join dataframes together
STPred2<-left_join(STPred,Avg_YM_Temp, by = c("SiteCode","Year","Month"))
STPred2 #216 x 8
STPred3<-left_join(STPred2,PropLogL3, by = c("SiteCode","Year","Month"))
STPred3 #216 x 11
STPred3<-STPred3%>%
select(-Count,-numberoflogs_MYL3)
STPred4<-left_join(STPred3,PropLogL4.5 , by = c("SiteCode","Year","Month"))
STPred4 #216 x 12
STPred4<-STPred4%>%
select(-Count,-numberoflogs_MYL4.5)
STPred5<-left_join(STPred4,PropLogL5 , by = c("SiteCode","Year","Month"))
STPred5 #216 x 13
STPred5<-STPred5%>%
select(-Count,-numberoflogs_MYL5)
STPred6<-left_join(STPred5,PropLogG20 , by = c("SiteCode","Year","Month"))
STPred6 #216 x 14
STPred6<-STPred6%>%
select(-Count,-numberoflogs_MYG20)
STPred7<-left_join(STPred6,PropLogG24, by = c("SiteCode","Year","Month"))
STPred7 #216 x 15
STPred7<-STPred7%>%
select(-Count,-numberoflogs_MYG24)
write.csv(STPred7,"STPred.csv")
View(PropLogL3)
=======
STPred #266 x 7
View(STPred)
#Long-term (LT) Loyalsock (L) Surveys
#Creating Response variables
#Created by Sara Ashcraft 2/18/2024
#Modified by Sara Ashcraft 2/19/2024
#Modified by Sara Ashcraft 3/20/2024
#Load Library
library(tidyverse)
# Install paclage and Load Library
install.packages("tidyverse")
library(tidyverse)
#Set working Directory
setwd("C:/GitHub/johnson_capstone/spring")
#Load data - all LTL only
#Sites with background data
SitesLoyalU<-read_csv("SitesLoyalU.csv")
SitesLoyalU
#Events with dates
EventsLoyal<-read_csv("EventsLoyal.csv",
col_types = cols(
SiteCode = col_character(),
EventCode = col_character(),
Date = col_date(format = "%m/%d/%Y")
library("audio")
install.packages("audio")
library("audio")
bday_file <- tempfile()
download.file("http://www.happybirthdaymusic.info/01_happy_birthday_song.wav", bday_file, mode = "wb")
bday_file <- tempfile()
download.file("http://www.happybirthdaymusic.info/01_happy_birthday_song.wav", bday_file, mode = "wb")
bday <- load.wave(bday_file)
play(bday)
#Long-term (LT) Loyalsock (L) Surveys
#Creating Response variables
#Created by Sara Ashcraft 2/18/2024
#Modified by Sara Ashcraft 2/19/2024
#Modified by Sara Ashcraft 3/20/2024
#Load Library
library(tidyverse)
#Set working Directory
setwd("C:/GitHub/johnson_capstone/spring")
#Load data - all LTL only
#Sites with background data
SitesLoyalU<-read_csv("SitesLoyalU.csv")
SitesLoyalU
#Events with dates
EventsLoyal<-read_csv("EventsLoyal.csv",
col_types = cols(
SiteCode = col_character(),
EventCode = col_character(),
Date = col_date(format = "%m/%d/%Y")
))
EventsLoyal
FishSurLoy<-read_csv("FishSurLoy.csv")
FishSurLoy
View(FishSurLoy)
#Brook Trout records to create count/event,biomass/event length freq histo for 2020 data, Adult/YOY ratio
BKTRecLoy<-read_csv("BKTRecLoy.csv")
BKTRecLoy
BKTRecLoySum<-BKTRecLoy%>%
select(SiteCode,EventCode)%>%
group_by(SiteCode,EventCode)%>%
summarise(
n = n()
)
summarise(BKTRecLoySum)
View(BKTRecLoySum)
BKTRecLoy # 302 x 3 - need to check are missing 4 surveys(probably surveys where
#Create Area using FishSurLoy
FishSurLoyU<-FishSurLoy%>%
mutate(
Area = Length*AveWid)%>%
select(!c(Length,AveWid))
FishSurLoyU # 306 x 3 - all have calculated area
View(FishSurLoy)
BKTEvtSum<-BKTRecLoy%>%
group_by(EventCode)%>%
summarise(
Count = n(),
Biomass = sum(Wt_g)
)
BKTEvtSum #302 x 3 - the events with no brook trout are missing and missing biomass for some sites.
################################################################################
#Create Area using FishSurLoy
FishSurLoyU<-FishSurLoy%>%
mutate(
Area = Length*AveWid)%>%
select(!c(Length,AveWid))
FishSurLoyU # 306 x 3 - all have calculated area
################################################################################
#Create Count/Event and Biomass/Event using BKTRecLoy
BKTEvtSum<-BKTRecLoy%>%
group_by(EventCode)%>%
summarise(
Count = n(),
Biomass = sum(Wt_g)
)
View(BKTEvtSum)
BKTEvtSum #302 x 3 - the events with no brook trout are missing and missing biomass for some sites.
################################################################################
#Find YOY-Adult threshold with Length Frequency Histogram using BKTRecLoy for 2020 data
BKT2020TL<-BKTRecLoy%>%
filter(str_detect(EventCode,"2020"))
BKT2020TL# - need to QC
View(BKT2020TL)
hist(BKT2020TL$Length_mm,freq=T,breaks=22.32,axes=F)
maj1<-c(20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,
210,220,230,240)# Lengths
axis(1,at=maj1,lty=1,lwd=0.5, pos=0,labels=T)
maj2<-c(0,50,100,150,200,250,300,350,400,450,500,550,600,650,700)#Freq
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=22)#tck=1
#Threshold 75
################################################################################
#Create Adult/YOY Ratio using BKTRecLoy
#YOY < 75 (Length_mm)
#Adult >= 75 (Length_mm)
Ad_YOY<-BKTRecLoy %>%
group_by(EventCode)%>%
summarise(
Adult = sum(Length_mm > 75,.drop=F),
YOY = sum(Length_mm <=75,.drop=F),
TotalCount = n()
)
#Changing strategy to "percent Adults - percent YOY"
RatioAY<-Ad_YOY %>%
mutate(
PerA = Adult/TotalCount,
PerY = YOY/TotalCount,
RatAY = PerA-PerY
)
View(RatioAY)
################################################################################
#Create CPUE_Count and CPUE_Biomass using FishSurLoy AND BKTRecLoy
CPUE<-left_join(FishSurLoyU,BKTEvtSum,by="EventCode")
CPUE
View(CPUE)
CPUEVar<-CPUE %>%
group_by(EventCode)%>%
summarise(
CPUE_Count = Count/Area *100,
CPUE_Biomass = Biomass/Area *100
)
CPUEVar #306 x 3
CPUEYear <- left_join(CPUEVar, EventsLoyal, by =c("EventCode"))
CPUEYearU <- CPUEYear %>%
mutate(
Year = format(as.Date(Date), "%Y"))
CPUEYearU
View(CPUEYear)
#Combine response variables to one tibble
BKTVar<-left_join(CPUEYearU,RatioAY)%>%
select(!c(Date,Adult,YOY,TotalCount,PerA,PerY))
BKTVar# 306 x 6
BKTVarO<-BKTVar[,c(4,1,5,2:3,6)]
BKTVarO
View(BKTVar)
View(BKTVarO)
#write.csv(BKTVarO,"BKTVar_AllSites.csv")
write.csv(BKTVarO,"BKTVar_AllSites.csv")
#Set working Directory
setwd("C:/GitHub/johnson_capstone/spring")
#Read Both BKTVar and STDPred csv's
BKTVar <- read_csv("BKTVar.csv") #correct
STPred <- read_csv("STPred.csv") #correct
View(BKTVar)
View(STPred)
View(BKTVarO)
BKTVar<- read_csv("BKTVar_AllSites.csv") #Updated; Brook Trout for all years of Long Term Loyalsock Project. #Correct
View(BKTVar)
BKTVar2020 <- BKTVar %>%
filter(str_detect(EventCode, "^2020"))
BKTVar2021 <- BKTVar %>%
filter(str_detect(EventCode, "^2021"))
STPred2020 <- STPred %>%
filter(Year == "2020")
STPred2021 <- STPred %>%
filter(Year == "2021")
STPredQC <- STPred %>%
filter(Year == "2016"| Year == "2017"| Year == "2018"| Year == "2019")
#YAY it worked! :)
#Y variable first, then x!
#First we have to merge the data frame to get all columsn in the same data frame through a unique identifier.
#That unique identifier column is "SiteCode"
Data_merge <- left_join(STPred2020, BKTVar2020, by = c("SiteCode", "Year"))
Data_merge1 <- left_join(STPred2021, BKTVar2021, by = c("SiteCode", "Year"))
#Need to add Year to this table so we can left join by Year and SiteCode
#Now we can start building models and running stats.
#Lets start simple with one Y and one X. Don't violate the assumptions with our data so will be linear models
#First lets try CPUE_Count against Highest_Temperature_C
cpueC_HighT <- lm(CPUE_Count ~ Highest_Temperature_C, data = Data_merge)
summary(cpueC_HighT)
plot(cpueC_HighT)
cpueC_LowT <- lm(CPUE_Count ~ Lowest_Temperature_C, data = Data_merge)
summary(cpueC_LowT)
plot(cpueC_LowT)
cpueC_AvgMin <- lm(CPUE_Count ~ AvgMin, data = Data_merge)
summary(cpueC_AvgMin)
plot(cpueC_LowT)
cpueC_AvgMax <- lm(CPUE_Count ~ AvgMax, data = Data_merge)
summary(cpueC_AvgMax)
plot(cpueC_AvgMax)
#First lets try CPUE_Biomass against Highest Temp/ Year Month
cpueB_HighT <- lm(CPUE_Biomass ~ Highest_Temperature_C, data = Data_merge)
summary(cpueB_HighT)
plot(cpueC_HighT)
cpueB_LowT <- lm(CPUE_Biomass ~ Lowest_Temperature_C, data = Data_merge)
summary(cpueB_LowT)
plot(cpueC_LowT)
cpueB_AvgMin <- lm(CPUE_Biomass ~ AvgMin, data = Data_merge)
summary(cpueB_AvgMin)
plot(cpueB_AvgMin)
cpueB_AvgMax <- lm(CPUE_Biomass ~ AvgMax, data = Data_merge)
summary(cpueB_AvgMax)
plot(cpueB_AvgMax)
#First lets do Rat_AY against Highest_Temperature_C
RatAY_HighT <- lm(RatAY ~ Highest_Temperature_C, data = Data_merge)
summary(RatAY_HighT)
plot(RatAY_HighT)
RatAY_LowT <- lm(RatAY ~ Lowest_Temperature_C, data = Data_merge)
summary(RatAY_LowT)
plot(RatAY_LowT)
RatAy_AvgMin <- lm(RatAY ~ AvgMin, data = Data_merge)
summary(RatAy_AvgMin)
plot(RatAy_AvgMin)
RatAy_AvgMax <- lm(RatAY ~ AvgMax, data = Data_merge)
summary(RatAy_AvgMax)
plot(RatAy_AvgMax)
GLM_CPUEC_HighT <- glm(CPUE_Count ~ Highest_Temperature_C, data = Data_merge, family = binomial())
cpue_BTestAvgMax <- lm(BKTVar$CPUE_Biomass ~ STPred$AvgMax)
#MW from scratch:
library(mgcv)
#MW from scratch:
install.packages("mgcv")
install.packages("mgcv")
library(mgcv)
mod1 <- gam(Highest_Temperature_C~Year+Month, data=STPred)
summary(mod1)
AIC(mod1) #372.46
mod2 <- gam(Highest_Temperature_C~Year+s(SiteCode, bs = 're'), data=STPred)#double check reason for error
summary(mod2)
AIC(mod)
mod2 <- gam(Highest_Temperature_C~Year+SiteCode, data=STPred)
summary(mod2)
AIC(mod2)#629.2585
mod3 <- gam(Highest_Temperature_C~Year*SiteCode, data=STPred)
summary(mod3)
AIC(mod3)#631.99
mod4 <- gam(Highest_Temperature_C~Month+SiteCode, data=STPred)
summary(mod4)
AIC(mod4)#356.3311
mod5 <- gam(Highest_Temperature_C~Month*SiteCode, data=STPred)
summary(mod5)
AIC(mod5)#283.9091....super extra overfit
mod6 <- gam(Lowest_Temperature_C~Month+SiteCode, data=STPred)
summary(mod6)
AIC(mod6)#384.78
mod7 <- gam(Lowest_Temperature_C~Month*SiteCode, data=STPred)
summary(mod7)
AIC(mod7)#427.66....super extra overfit
mod8 <- gam(AvgMax~Month+SiteCode, data=STPred)
summary(mod8)
AIC(mod8)#346.03
mod9 <- gam(AvgMax~Month*SiteCode, data=STPred)
summary(mod9)
AIC(mod9)#278.73....super extra overfit
mod10 <- gam(AvgMin~Month+SiteCode, data=STPred)
summary(mod10)
AIC(mod10)#339.86
mod11 <- gam(AvgMin~Month*SiteCode, data=STPred)
summary(mod11)
AIC(mod11)#276.30....super extra overfit
mod12 <- gam(RatAY~Year+SiteCode, data=BKTVar)
summary(mod12)
AIC(mod12)#105.20; With all years
mod13 <- gam(RatAY~Year*SiteCode, data=BKTVar)
summary(mod13)
AIC(mod13)#68.78; With all years
D
Data_merge <- merge(BKTVar, STPred, by = "SiteCode", all = TRUE)
colnames(Data_merge)
View(Data_merge)
mod14 <- gam(RatAY~Year.x, data=Data_merge)
summary(mod14)
AIC(mod14)#295.85; With all years
mod14 <- gam(RatAY~Year.x, data=Data_merge)
summary(mod14)
mod15 <- gam(RatAY~Year.x*Highest_Temperature_C, data=Data_merge)
summary(mod15)
AIC(mod15)#235.28
mod16 <- gam(RatAY~Year.x*Lowest_Temperature_C, data=Data_merge)
summary(mod16)
AIC(mod16)#249.42; With all years
mod17 <- gam(RatAY~Year.x+Lowest_Temperature_C, data=Data_merge)
summary(mod17)
AIC(mod17)#228.26; With all years
#scratchpad
mod18 <- gam(CPUE_Biomass~Year.x*AvgMax, data=Data_merge)
summary(mod18)
AIC(mod18)#228.29; With all years
mod18 <- gam(CPUE_Count~Year.x*AvgMax, data=Data_merge)
summary(mod18)
AIC(mod18)#228.29; With all years
>>>>>>> Stashed changes
