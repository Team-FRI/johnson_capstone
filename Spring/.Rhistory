group_by(DateTime) %>%
summarise(
Avg_Temp = mean(Temp_C, na.rm = TRUE)
)
View(Painter_Monthly_Extremes_Avg)
View(Painter_Monthly_Extremes_Avg2)
Painter_Monthly_Extremes_Avg3 <- Painter_Monthly_Extremes_Avg2 %>%
group_by(Year, Month) %>%
summarise(min=min(Avg_Temp), max=max(Avg_Temp))
View(Painter_Monthly_Extremes_Avg3)
Painter_Monthly_Extremes_MinMax <- Painter_ST %>%
group_by(DateTime) %>%
summarise(
min_temp = min(Temp_C, na.rm = TRUE), max_temp = max(Temp_C, na.rm = TRUE)
)
View(Painter_Monthly_Extremes_MinMax)
Painter_Monthly_Extremes_MinMax2 <- Painter_Monthly_Extremes_MinMax %>%
separate(DateTime, into = c("Year", "Month", "Day"), sep = "-" )
Painter_Monthly_Extremes_MinMax3 <- Painter_Monthly_Extremes_MinMax2 %>%
group_by(Year, Month) %>%
summarise(Average min=mean(min_temp), Average max=mean(max_temp))
Painter_Monthly_Extremes_MinMax3 <- Painter_Monthly_Extremes_MinMax2 %>%
group_by(Year, Month) %>%
summarise(AverageMin=mean(min_temp), AverageMax=mean(max_temp))
View(Painter_Monthly_Extremes_MinMax3)
View(CPUE)
View(ratio_data1)
View(ratio_data)
View(CPUE_Biomass)
View(Biomass)
View(minmaxtemp)
View(Painter_Monthly_Extremes)
View(Painter_Monthly_Extremes_MinMax3)
View(PainterEventInfo2)
View(PainterEventInfo1)
View(PainterEventInfo1)
View(AllFishRec)
View(AllFishRec)
View(PainterEventInfo)
View(AllFishSurvey)
#Load Library
library(tidyverse)
#Load Library
library(tidyverse)
setwd("C:/GitHub/johnson_capstone/spring")
#Load data
Sites<-read_csv("All_Sites.csv",
col_types = cols(
SiteID = col_double(),
ChooseMe = col_skip(),
SiteCode = col_character(),
SiteName = col_character(),
TribTo = col_character(),
RFPID = col_skip(),
MouthLat = col_skip(),
MouthLon = col_skip(),
SiteLat = col_double(),
SiteLon = col_double(),
ParkLat = col_skip(),
ParkLon = col_skip(),
County = col_skip(),
NearTown = col_skip(),
TownCardinal = col_skip(),
HUC12Watershed = col_skip(),
NearRoadCross = col_skip(),
AccessContactName = col_skip(),
AccessContactPhone = col_skip(),
AccessContactEmail = col_skip(),
AccessParking = col_skip(),
LocationNotes = col_skip(),
YearResto = col_skip(),
ExpFunction = col_skip()
))
View(Sites)
Events<-read_csv("All_Events.csv",
col_types = cols(
EventsID = col_skip(),
SiteCode = col_character(),
EventCode = col_character(),
Personnel = col_skip(),
CrewLeader = col_skip(),
SiteName = col_skip(),
TribTo = col_skip(),
Date = col_character(),
TimeStart = col_skip(),
TimeEnd = col_skip(),
MouthLat = col_skip(),
MouthLon = col_skip(),
SiteLat = col_skip(),
SiteLon = col_skip(),
Discharge = col_skip(),
WaterTemp = col_skip(),
pH = col_skip(),
SpecCond = col_skip(),
Alk = col_skip(),
DO = col_skip(),
Hardness = col_skip(),
AirTemp = col_skip(),
Turbidity = col_skip(),
Format = col_skip(),
Unassessed = col_skip(),
Connectivity = col_skip(),
Loyalsock = col_character(),
FarmStreams = col_skip(),
Other = col_skip(),
Location = col_skip(),
EventNotes = col_skip(),
Weather = col_skip(),
WQTime = col_skip()
))
View(Events)
#Reduce Events to only events categorized as Loyalsock
EventsLoyal<-Events%>%
filter(Loyalsock =="Loyalsock")%>%
select(!Loyalsock)# after QC - don't need this column
EventsLoyal#306 x 3
View(EventsLoyal)
# 24 of 30 sites have 10 events.
# Sites with 11 events need investigated: Coal, DryHB, Granddad, Painter, Red, Rock
EventsInv<-EventsLoyal%>%
filter(SiteCode =="Coal.UpperLoyalsock"|SiteCode =="DryHB.Hoagland"|SiteCode =="Grandad.Hessler"|
SiteCode =="Painter.LittleBear"|SiteCode =="Red.LittleBear"|SiteCode =="Rock.LittleLoyalsock")%>%
arrange(SiteCode,EventCode)
EvLoySum
#    Time had only 9 surveys out of 306 with a time recorded - removed from data prep.
#QC- that all events make sense as LTL.
EvLoySum<-EventsLoyal%>%
group_by(SiteCode)%>%
summarise(
LoyalEventCount = n()
)
EvLoySum
# 24 of 30 sites have 10 events.
# Sites with 11 events need investigated: Coal, DryHB, Granddad, Painter, Red, Rock
EventsInv<-EventsLoyal%>%
filter(SiteCode =="Coal.UpperLoyalsock"|SiteCode =="DryHB.Hoagland"|SiteCode =="Grandad.Hessler"|
SiteCode =="Painter.LittleBear"|SiteCode =="Red.LittleBear"|SiteCode =="Rock.LittleLoyalsock")%>%
arrange(SiteCode,EventCode)
View(EventsInv)
EventsInv# all sites surveyed in 2021 - an additional year after all other sites labeled Loyalsock.
View(EventsInv)
#Create Table for reducting other table to LTL only
EventsLoyalR<-EventsLoyal[,c(1,2)]
EventsLoyalR
#Reduce Sites to only Sites categorized as Loyalsock
SitesLoyal<-left_join(EvLoySum,Sites,by="SiteCode")
SitesLoyalU<-SitesLoyal[, c(1,4,5,2,6,7)]%>%
arrange(SiteCode)
View(SitesLoyalU)
SitesLoyalU# 30 x 6
#Load Data
FishSurvey<-read_csv("All_FishSurvey.csv",
col_types = cols(
SurveyID = col_skip(),
SiteCode = col_skip(),
EventCode = col_character(),
Date = col_skip(),
Watername = col_skip(),
TribTo = col_skip(),
Time = col_skip(),
CrewLeader = col_skip(),
Comments = col_skip(),
Location = col_skip(),
Length = col_double(),
AveWid = col_double(),
Wid1 = col_skip(),
Wid2 = col_skip(),
Wid3 = col_skip(),
Wid4 = col_skip(),
Wid5 = col_skip(),
VoltStart = col_skip(),
FreqStart = col_skip(),
DutyStart = col_skip(),
Volts = col_skip(),
FreqEnd = col_skip(),
DutyEnd = col_skip(),
Flow = col_skip(),
EffortMin = col_skip(),
Seconds = col_skip(),
Pass1TimeA = col_skip(),
Pass2TimeA = col_skip(),
Pass3TimeA = col_skip(),
Pass1TimeB = col_skip(),
Pass2TimeB = col_skip(),
Pass3TimeB = col_skip(),
Pass1TimeC = col_skip(),
Pass2TimeC = col_skip(),
Pass3TimeC = col_skip(),
Pass1TimeD = col_skip(),
Pass2TimeD = col_skip(),
Pass3TimeD = col_skip(),
PEAllTrout = col_skip(),
PEBrook = col_skip(),
PEBrown = col_skip(),
PERainbow = col_skip(),
PEYOYAll = col_skip(),
PEYOYBrook = col_skip(),
PEYOYBrown = col_skip(),
PEYOYRainbow = col_skip(),
PEAdtAll = col_skip(),
PEAdtBrook = col_skip(),
PEAdtBrown = col_skip(),
PEAdtRainbow = col_skip(),
BrookP1 = col_skip(),
BrookP2 = col_skip(),
BrookP3 = col_skip(),
BrownP1 = col_skip(),
BrownP2 = col_skip(),
BrownP3 = col_skip(),
RainP1 = col_skip(),
RainP2 = col_skip(),
RainP3 = col_skip(),
TigerP1 = col_skip(),
TigerP2 = col_skip(),
TigerP3 = col_skip(),
TotalP1 = col_skip(),
TotalP2 = col_skip(),
TotalP3 = col_skip(),
GrandTotal = col_skip(),
NumShockers = col_skip(),
TimeStamp = col_skip(),
IDBy = col_skip(),
RecordBy = col_skip(),
Crew = col_skip(),
RFPID = col_skip(),
SurveyNotes = col_skip(),
Operators = col_skip(),
Netters = col_skip()
))
View(FishSurvey)
#Reduce to fish surveys completed as part of LTL
FishSurLoy<-left_join(EventsLoyalR,FishSurvey,by="EventCode")
FishSurLoy # 306 x 4
#load data
FishRecords<-read_csv("All_FishRecords.csv",
col_types = cols(
ID = col_skip(),
Species = col_character(),
Length_mm = col_double(),
Wt_g = col_double(),
DELTM = col_skip(),
FishComment = col_skip(),
Diet = col_skip(),
Pass = col_skip(),
Date = col_skip(),
waterName = col_skip(),
TribTo = col_skip(),
EventCode = col_character(),
ScaleID = col_skip()
))
View(FishRecords)
FishRecords<-FishRecords[,c(4,1,2,3)]
FishRecords
FishRecords<-FishRecords[,c(4,1,2,3)]
FishRecords
#Try to Reduce records but need to QC to ensure no LTL records are lost.
FishRecLoy<-left_join(x=EventsLoyalR,y=FishRecords,by="EventCode",multiple="all")
FishRecLoy
FishRecLoy
# Did a right join so that I could QC for Events when the SiteCode is 'NA'
QCFishRec<-FishRecLoy%>%
group_by(SiteCode,EventCode)%>%
summarize(
Count = n()
)
QCFishRec # 306 events - check
#QC to see if only LTL sites are left
LTLSites<-QCFishRec%>%
group_by(SiteCode)%>%
summarise(count = n())
LTLSites # 3- sites - check
#Now reduce fish records to Brook Trout only
BKTRecLoy<-FishRecLoy%>%
filter(Species=="Brook Trout")
BKTRecLoy
View(BKTRecLoy)
#Load Library
library(tidyverse)
setwd("C:/GitHub/johnson_capstone/spring")
################################################################################
#Create Area using FishSurLoy
FishSurLoyU<-FishSurLoy%>%
mutate(
Area = Length*AveWid)%>%
select(!c(Length,AveWid))
FishSurLoyU # 306 x 3
################################################################################
#Create Count/Event and Biomass/Event using BKTRecLoy
BKTEvtSum<-BKTRecLoy%>%
group_by(EventCode)%>%
summarise(
Count = n(),
Biomass = sum(Wt_g)
)
View(BKTEvtSum)
BKTEvtSum # 302 x 3 - need to check are missing 4 surveys(probably surveys where
#The following 8 EventCodes have a Count but no Biomass:               201806.DryHB.Hoagland,
#  201206.FlagMarsh.Pigeon,201306.Shingle.Bear,    201206.Shingle.Bear,201406.Mill.Loyalsock,
#  201306.Huckle.Loyalsock,201206.Huckle.Loyalsock,201206.Yellow.LittleLoyalsock
#     None of these Events are in 2019, 2020, or 2021
#Still missing 4 Events and I think it is these 4 that are missing:
#  201206.Sand.MillMokoma,201206.Ellis.UpperLoyalsock,201306.Sherman.UpperLoyalsock
#  201306.Ellis.LoyalsockUpper
#     None of these Events are in 2019, 2020, or 2021
################################################################################
#Find YOY-Adult threshold with Length Frequency Histogram using BKTRecLoy for 2020 data
BKT2020TL<-BKTRecLoy%>%
filter(str_detect(EventCode,"2020"))
View(BKT2020TL)
BKT2020TL# - need to QC
hist(BKT2020TL$Length_mm,freq=T,breaks=22.32,axes=F)
maj1<-c(20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,
210,220,230,240)# Lengths
axis(1,at=maj1,lty=1,lwd=0.5, pos=0,labels=T)
maj2<-c(0,50,100,150,200,250,300,350,400,450,500,550,600,650,700)#Freq
axis(2,at=maj2,lty=1,lwd=0.5,las=2,pos=22)#tck=1
#Threshold 75
################################################################################
#Create Adult/YOY Ratio using BKTRecLoy
#YOY < 75 (Length_mm)
#Adult >= 75 (Length_mm)
Ad_YOY<-BKTRecLoy %>%
group_by(EventCode)%>%
summarise(
Adult = sum(Length_mm > 75,.drop=F),
YOY = sum(Length_mm <=75,.drop=F),
TotalCount = n()
)
Ad_YOY
#RatioA_Y<-Ad_YOY %>%
#  mutate(RatioA_Y = Adult/YOY)
#RatioA_Y# what to do about events with YOY = 0
#Changing strategy to percent Adults - percent YOY
RatioAY<-Ad_YOY %>%
mutate(
PerA = Adult/TotalCount,
PerY = YOY/TotalCount,
RatAY = PerA-PerY
)
RatioAY
View(RatioAY)
Ad_YOY
RatioA_Y<-Ad_YOY %>%
#  mutate(RatioA_Y = Adult/YOY)
#RatioA_Y# what to do about events with YOY = 0
#Changing strategy to percent Adults - percent YOY
RatioAY<-Ad_YOY %>%
mutate(
PerA = Adult/TotalCount,
PerY = YOY/TotalCount,
RatAY = PerA-PerY
)
RatioA_Y<-Ad_YOY %>%
mutate(RatioA_Y = Adult/YOY)
View(RatioA_Y)
RatioAY<-Ad_YOY %>%
mutate(
PerA = Adult/TotalCount,
PerY = YOY/TotalCount,
RatAY = PerA-PerY
)
RatioAY
################################################################################
#Create CPUE_Count and CPUE_Biomass using FishSurLoy AND BKTRecLoy
CPUE<-left_join(FishSurLoyU,BKTEvtSum,by="EventCode")
CPUE
View(CPUE)
CPUEVar<-CPUE %>%
group_by(SiteCode,EventCode)%>%
summarise(
CPUE_Count = Count/Area,
CPUE_Biomass = Biomass/Area
)
CPUEVar #306 x 4
View(CPUEVar)
################################################################################
#Create CPUE_Count and CPUE_Biomass using FishSurLoy AND BKTRecLoy
CPUE<-left_join(FishSurLoyU,BKTEvtSum,by="EventCode")
CPUE
CPUEVar<-CPUE %>%
group_by(SiteCode,EventCode)%>%
summarise(
CPUE_Count = Count/Area *100,
CPUE_Biomass = Biomass/Area *100
)
CPUEVar #306 x 4
View(CPUEVar)
################################################################################
#Combine response variables to one tibble
BKTVar<-left_join(CPUEVar,RatioAY)%>%
select(!c(Adult,YOY,TotalCount,PerA,PerY))
BKTVar# 306 x 5
#Long-term (LT) Loyalsock (L) Surveys
#Logger Data Prep for Loops
#Created by Sara Ashcraft 2/18/2024
#Load Library
library(tidyverse)
library(lubridate)
#Set working Directory
setwd("C:/GitHub/johnson_capstone/spring")
#Load data - Stream Temp QC only
BearT<-read_csv("Bear.Loyalsock_Stream_QC.csv")
BrunT<-read_csv("Brunnerdale.Ogdonia_Stream_QC.csv")
CoalT<-read_csv("Coal.Loyalsock_Stream_QC.csv")
ConkT<-read_csv("Conklin.Mill_Stream_QC.csv")
DryHBT<-read_csv("Dry.Hoagland_Stream_QC.csv")
DryLST<-read_csv("Dry.Loyalsock_Stream_QC.csv")
DutcT<-read_csv("Dutchman.Loyalsock_Stream_QC.csv")
ElliT<-read_csv("Ellis.Loyalsock_Stream_QC.csv")
FallT<-read_csv("Fall.Hoagland_Stream_QC.csv")
FlagT<-read_csv("FlagMarsh.Pigeon_Stream_QC.csv")
GranT<-read_csv("Grandad.Hessler_Stream_QC.csv")
#HuckT<-read_csv("") #No logger retrieved
LakeT<-read_csv("Lake.Elk_Stream_QC.csv")
######################
#Bind row so that all stream temperature data is in one tibble
StreamTemp<-rbind(BearT,BrunT,CoalT,ConkT,DryHBT,DryLST,DutcT,ElliT,FallT,FlagT,
GranT,LakeT)
#                 HuckT,LickT,MillT,PainT,PortT,RedT,RockT,SandT,SaSpT,
#                  ScarT,SherT,ShinT,SnakT,StreT,SwamT,WeedT,YellT)
StreamTemp
#####################
#Separate out Year-Month-Day-Time so that we can create different predictors.
#STemp<-StreamTemp%>%
#  separate(DateTime, into=c("Date","Time"),sep=" ",remove=FALSE)%>%
#  separate(Date, into=c("Year","Month","Day"),sep="-",remove=FALSE)%>%
#  mutate_at(vars(Date),date)%>%
#  mutate_at(vars(Year,Month,Day),factor)
#STemp
ST<- StreamTemp %>% #Like this code better
mutate(
Date = format(as.Date(DateTime),"%Y-%m-%d"),
Year = format(as.Date(DateTime),"%Y"),
Month = format(as.Date(DateTime),"%m"),
Day = format(as.Date(DateTime),"%d")
)%>%
mutate_at(vars(Date),date)%>%
mutate_at(vars(Year,Month,Day),factor)
ST
View(StreamTemp)
View(ST)
#QC - Date,Year,Month
QCTempDate<-ST %>%
group_by(SiteCode,Date)%>%
summarize(Count=n())%>%
arrange(Date)
QCTempDate
QCTempY<-ST %>%
group_by(SiteCode,Year)%>%
summarize(Count=n())%>%
arrange(Year)
QCTempY
QCTempM<-ST %>%
group_by(SiteCode,Month)%>%
summarize(Count=n())%>%
arrange(Month)
QCTempM
###############################################################################
#Create Min/Max reading for each Month-Year.
Monthly_Extremes <- ST %>%
group_by(SiteCode,Year, Month) %>%
summarise(
Highest_Temperature_C = max(Temp_C),
Lowest_Temperature_C = min(Temp_C)
)
Monthly_Extremes # 266 x 5
View(Monthly_Extremes)
Monthly_MinMax
YM<- Monthly_MinMax %>% #Like this code better
mutate(
Date = format(as.Date(Date),"%Y-%m-%d"),
Year = format(as.Date(Date),"%Y"),
Month = format(as.Date(Date),"%m")
)%>%
mutate_at(vars(Date),date)%>%
mutate_at(vars(Year,Month),factor)
Monthly_MinMax <- ST %>%
group_by(SiteCode,Date) %>%
summarise(
Min_tempC = min(Temp_C),
Max_tempC = max(Temp_C)
Monthly_MinMax <- ST %>%
###############################################################################
#Create Avg Min/Max reading for each Month-Year
Monthly_MinMax <- ST %>%
group_by(SiteCode,Date) %>%
summarise(
Min_tempC = min(Temp_C),
Max_tempC = max(Temp_C)
)
Monthly_MinMax
YM<- Monthly_MinMax %>% #Like this code better
mutate(
Date = format(as.Date(Date),"%Y-%m-%d"),
Year = format(as.Date(Date),"%Y"),
Month = format(as.Date(Date),"%m")
)%>%
mutate_at(vars(Date),date)%>%
mutate_at(vars(Year,Month),factor)
View(YM)
YM
Monthly_AvgMinMax <- YM %>%
group_by(SiteCode,Year, Month) %>%
summarise(
AvgMin=mean(Min_tempC),
AvgMax=mean(Max_tempC))
Monthly_AvgMinMax # 266 x 5
###############################################################################
#Join Monthly_Extremes and Monthly_AvgMinMax together
STPred<-left_join(Monthly_Extremes,Monthly_AvgMinMax, by = c("SiteCode","Year","Month"))
STPred #266 x 7
View(STPred)
